{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "gasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Transaction",
              "name": "transaction",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "delegate",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "authority",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "enforcer",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "terms",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct Caveat[]",
                      "name": "caveats",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct Delegation",
                  "name": "delegation",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SignedDelegation[]",
              "name": "authority",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Invocation[]",
          "name": "batch",
          "type": "tuple[]"
        }
      ],
      "name": "contractInvoke",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "authority",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "enforcer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "terms",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Caveat[]",
              "name": "caveats",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Delegation",
          "name": "delegation",
          "type": "tuple"
        }
      ],
      "name": "getDelegationTypedDataHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "contractName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        }
      ],
      "name": "getEIP712DomainHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gasLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Transaction",
                  "name": "transaction",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "delegate",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "authority",
                          "type": "bytes32"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "enforcer",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes",
                              "name": "terms",
                              "type": "bytes"
                            }
                          ],
                          "internalType": "struct Caveat[]",
                          "name": "caveats",
                          "type": "tuple[]"
                        }
                      ],
                      "internalType": "struct Delegation",
                      "name": "delegation",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct SignedDelegation[]",
                  "name": "authority",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct Invocation[]",
              "name": "batch",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "queue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ReplayProtection",
              "name": "replayProtection",
              "type": "tuple"
            }
          ],
          "internalType": "struct Invocations",
          "name": "invocations",
          "type": "tuple"
        }
      ],
      "name": "getInvocationsTypedDataHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "gasLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct Transaction",
                      "name": "transaction",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "delegate",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "authority",
                              "type": "bytes32"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "enforcer",
                                  "type": "address"
                                },
                                {
                                  "internalType": "bytes",
                                  "name": "terms",
                                  "type": "bytes"
                                }
                              ],
                              "internalType": "struct Caveat[]",
                              "name": "caveats",
                              "type": "tuple[]"
                            }
                          ],
                          "internalType": "struct Delegation",
                          "name": "delegation",
                          "type": "tuple"
                        },
                        {
                          "internalType": "bytes",
                          "name": "signature",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct SignedDelegation[]",
                      "name": "authority",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct Invocation[]",
                  "name": "batch",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "queue",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ReplayProtection",
                  "name": "replayProtection",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Invocations",
              "name": "invocations",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedInvocation[]",
          "name": "signedInvocations",
          "type": "tuple[]"
        }
      ],
      "name": "invoke",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "delegate",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "authority",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "enforcer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "terms",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Caveat[]",
                  "name": "caveats",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct Delegation",
              "name": "delegation",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedDelegation",
          "name": "signedDelegation",
          "type": "tuple"
        }
      ],
      "name": "verifyDelegationSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "gasLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct Transaction",
                      "name": "transaction",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "delegate",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "authority",
                              "type": "bytes32"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "enforcer",
                                  "type": "address"
                                },
                                {
                                  "internalType": "bytes",
                                  "name": "terms",
                                  "type": "bytes"
                                }
                              ],
                              "internalType": "struct Caveat[]",
                              "name": "caveats",
                              "type": "tuple[]"
                            }
                          ],
                          "internalType": "struct Delegation",
                          "name": "delegation",
                          "type": "tuple"
                        },
                        {
                          "internalType": "bytes",
                          "name": "signature",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct SignedDelegation[]",
                      "name": "authority",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct Invocation[]",
                  "name": "batch",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "queue",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ReplayProtection",
                  "name": "replayProtection",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Invocations",
              "name": "invocations",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedInvocation",
          "name": "signedInvocation",
          "type": "tuple"
        }
      ],
      "name": "verifyInvocationSignature",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "contractInvoke(((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[])": "5c6d9f0c",
    "getDelegationTypedDataHash((address,bytes32,(address,bytes)[]))": "97182ed6",
    "getEIP712DomainHash(string,string,uint256,address)": "d327c1eb",
    "getInvocationsTypedDataHash((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)))": "60b6d768",
    "invoke(((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)),bytes)[])": "2fad7efc",
    "verifyDelegationSignature(((address,bytes32,(address,bytes)[]),bytes))": "8a04499e",
    "verifyInvocationSignature(((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)),bytes))": "caced6c5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"authority\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"enforcer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"terms\",\"type\":\"bytes\"}],\"internalType\":\"struct Caveat[]\",\"name\":\"caveats\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Delegation\",\"name\":\"delegation\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedDelegation[]\",\"name\":\"authority\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Invocation[]\",\"name\":\"batch\",\"type\":\"tuple[]\"}],\"name\":\"contractInvoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"authority\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"enforcer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"terms\",\"type\":\"bytes\"}],\"internalType\":\"struct Caveat[]\",\"name\":\"caveats\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Delegation\",\"name\":\"delegation\",\"type\":\"tuple\"}],\"name\":\"getDelegationTypedDataHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"}],\"name\":\"getEIP712DomainHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"authority\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"enforcer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"terms\",\"type\":\"bytes\"}],\"internalType\":\"struct Caveat[]\",\"name\":\"caveats\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Delegation\",\"name\":\"delegation\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedDelegation[]\",\"name\":\"authority\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Invocation[]\",\"name\":\"batch\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"queue\",\"type\":\"uint256\"}],\"internalType\":\"struct ReplayProtection\",\"name\":\"replayProtection\",\"type\":\"tuple\"}],\"internalType\":\"struct Invocations\",\"name\":\"invocations\",\"type\":\"tuple\"}],\"name\":\"getInvocationsTypedDataHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"authority\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"enforcer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"terms\",\"type\":\"bytes\"}],\"internalType\":\"struct Caveat[]\",\"name\":\"caveats\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Delegation\",\"name\":\"delegation\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedDelegation[]\",\"name\":\"authority\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Invocation[]\",\"name\":\"batch\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"queue\",\"type\":\"uint256\"}],\"internalType\":\"struct ReplayProtection\",\"name\":\"replayProtection\",\"type\":\"tuple\"}],\"internalType\":\"struct Invocations\",\"name\":\"invocations\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedInvocation[]\",\"name\":\"signedInvocations\",\"type\":\"tuple[]\"}],\"name\":\"invoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"authority\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"enforcer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"terms\",\"type\":\"bytes\"}],\"internalType\":\"struct Caveat[]\",\"name\":\"caveats\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Delegation\",\"name\":\"delegation\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"name\":\"verifyDelegationSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"authority\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"enforcer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"terms\",\"type\":\"bytes\"}],\"internalType\":\"struct Caveat[]\",\"name\":\"caveats\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Delegation\",\"name\":\"delegation\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedDelegation[]\",\"name\":\"authority\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Invocation[]\",\"name\":\"batch\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"queue\",\"type\":\"uint256\"}],\"internalType\":\"struct ReplayProtection\",\"name\":\"replayProtection\",\"type\":\"tuple\"}],\"internalType\":\"struct Invocations\",\"name\":\"invocations\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedInvocation\",\"name\":\"signedInvocation\",\"type\":\"tuple\"}],\"name\":\"verifyInvocationSignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"contractInvoke(((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[])\":{\"params\":{\"batch\":\"Invocation[] - The batch of invocations to process.\"},\"returns\":{\"_0\":\"success bool - Whether the batch of invocations was successfully processed.\"}},\"getDelegationTypedDataHash((address,bytes32,(address,bytes)[]))\":{\"params\":{\"delegation\":\"Delegation - The delegation to get the type of\"},\"returns\":{\"_0\":\"bytes32 - The type of the delegation\"}},\"getInvocationsTypedDataHash((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)))\":{\"params\":{\"invocations\":\"Invocations\"},\"returns\":{\"_0\":\"bytes32 - The type of the Invocations\"}},\"invoke(((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)),bytes)[])\":{\"params\":{\"signedInvocations\":\"SignedInvocation[] - The batch of signed invocations to process.\"},\"returns\":{\"success\":\"bool - Whether the batch of invocations was successfully processed.\"}},\"verifyDelegationSignature(((address,bytes32,(address,bytes)[]),bytes))\":{\"params\":{\"signedDelegation\":\"- The delegation to verify\"},\"returns\":{\"_0\":\"address - The address of the account authorizing this delegation to act on its behalf.\"}},\"verifyInvocationSignature(((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)),bytes))\":{\"params\":{\"signedInvocation\":\"- The signed invocation to verify\"},\"returns\":{\"_0\":\"address - The address of the account authorizing this invocation to act on its behalf.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"contractInvoke(((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[])\":{\"notice\":\"Allows a smart contract to submit a batch of invocations for processing, allowing itself to be the delegate.\"},\"getDelegationTypedDataHash((address,bytes32,(address,bytes)[]))\":{\"notice\":\"Returns the typehash for this contract's delegation signatures.\"},\"getInvocationsTypedDataHash((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)))\":{\"notice\":\"Returns the typehash for this contract's invocation signatures.\"},\"invoke(((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)),bytes)[])\":{\"notice\":\"Allows anyone to submit a batch of signed invocations for processing.\"},\"verifyDelegationSignature(((address,bytes32,(address,bytes)[]),bytes))\":{\"notice\":\"Verifies that the given delegation is valid.\"},\"verifyInvocationSignature(((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)),bytes))\":{\"notice\":\"Verifies that the given invocation is valid.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/delegatable/interfaces/IDelegatable.sol\":\"IDelegatable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/math/=node_modules/@prb/math/\",\":@prb/test/=lib/prb-test/src/\",\":delegatable/=lib/delegatable/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":prb-test/=lib/prb-test/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/delegatable/TypesAndDecoders.sol\":{\"keccak256\":\"0x503755ef25fc88df5586141f238ae10f422c830d6fd63e47ba970f80d48fd4f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed80d6642f0b08b312649d8194eacb6d113fc6e44b24c1c24cf6e352249f88ed\",\"dweb:/ipfs/QmRoo8B8n1BnY25gausX9P92Zqojybk5dWZR1W8jG7kxKW\"]},\"lib/delegatable/interfaces/IDelegatable.sol\":{\"keccak256\":\"0xe3439f9d371e4ded7980f4a78d52c0d6c0e02b73502d3bdf54a0a88afad4561e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf59a9780efc19727bbb0f99ab75d66d81b124d42f0c9dd580516407999b4d05\",\"dweb:/ipfs/QmWEjpbZ4wEg4HFAwzJbC8jmLrGygfyDGSSSyiSoKopHDm\"]},\"lib/delegatable/libraries/ECRecovery.sol\":{\"keccak256\":\"0x203c4ed012c45cbc0c74a7854fc20012d66d808e1518a0e48d6de3f55d20e40d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b946f583a512e33b6d16da5e0c2b491f4c30c6dab004377d71e30ae22653d065\",\"dweb:/ipfs/QmXvkAEBUfp7FZE5ygxu6fHF3579AsCwFL649jWQJibc67\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct Invocation[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct Transaction",
                  "name": "transaction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gasLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct SignedDelegation[]",
                  "name": "authority",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct Delegation",
                      "name": "delegation",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "delegate",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "authority",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "struct Caveat[]",
                          "name": "caveats",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "enforcer",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes",
                              "name": "terms",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "contractInvoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Delegation",
              "name": "delegation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "delegate",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "authority",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct Caveat[]",
                  "name": "caveats",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "enforcer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "terms",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDelegationTypedDataHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "contractName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getEIP712DomainHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Invocations",
              "name": "invocations",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Invocation[]",
                  "name": "batch",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct Transaction",
                      "name": "transaction",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "to",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "gasLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "data",
                          "type": "bytes"
                        }
                      ]
                    },
                    {
                      "internalType": "struct SignedDelegation[]",
                      "name": "authority",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct Delegation",
                          "name": "delegation",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "delegate",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "authority",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "struct Caveat[]",
                              "name": "caveats",
                              "type": "tuple[]",
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "enforcer",
                                  "type": "address"
                                },
                                {
                                  "internalType": "bytes",
                                  "name": "terms",
                                  "type": "bytes"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "bytes",
                          "name": "signature",
                          "type": "bytes"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct ReplayProtection",
                  "name": "replayProtection",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "queue",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getInvocationsTypedDataHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedInvocation[]",
              "name": "signedInvocations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct Invocations",
                  "name": "invocations",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct Invocation[]",
                      "name": "batch",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct Transaction",
                          "name": "transaction",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "to",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "gasLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bytes",
                              "name": "data",
                              "type": "bytes"
                            }
                          ]
                        },
                        {
                          "internalType": "struct SignedDelegation[]",
                          "name": "authority",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "struct Delegation",
                              "name": "delegation",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "delegate",
                                  "type": "address"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "authority",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "struct Caveat[]",
                                  "name": "caveats",
                                  "type": "tuple[]",
                                  "components": [
                                    {
                                      "internalType": "address",
                                      "name": "enforcer",
                                      "type": "address"
                                    },
                                    {
                                      "internalType": "bytes",
                                      "name": "terms",
                                      "type": "bytes"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "internalType": "bytes",
                              "name": "signature",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct ReplayProtection",
                      "name": "replayProtection",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "queue",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "invoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedDelegation",
              "name": "signedDelegation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Delegation",
                  "name": "delegation",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "delegate",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "authority",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "struct Caveat[]",
                      "name": "caveats",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "enforcer",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes",
                          "name": "terms",
                          "type": "bytes"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyDelegationSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SignedInvocation",
              "name": "signedInvocation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Invocations",
                  "name": "invocations",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct Invocation[]",
                      "name": "batch",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct Transaction",
                          "name": "transaction",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "to",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "gasLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "bytes",
                              "name": "data",
                              "type": "bytes"
                            }
                          ]
                        },
                        {
                          "internalType": "struct SignedDelegation[]",
                          "name": "authority",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "struct Delegation",
                              "name": "delegation",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "delegate",
                                  "type": "address"
                                },
                                {
                                  "internalType": "bytes32",
                                  "name": "authority",
                                  "type": "bytes32"
                                },
                                {
                                  "internalType": "struct Caveat[]",
                                  "name": "caveats",
                                  "type": "tuple[]",
                                  "components": [
                                    {
                                      "internalType": "address",
                                      "name": "enforcer",
                                      "type": "address"
                                    },
                                    {
                                      "internalType": "bytes",
                                      "name": "terms",
                                      "type": "bytes"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "internalType": "bytes",
                              "name": "signature",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct ReplayProtection",
                      "name": "replayProtection",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "nonce",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "queue",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyInvocationSignature",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "contractInvoke(((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[])": {
            "params": {
              "batch": "Invocation[] - The batch of invocations to process."
            },
            "returns": {
              "_0": "success bool - Whether the batch of invocations was successfully processed."
            }
          },
          "getDelegationTypedDataHash((address,bytes32,(address,bytes)[]))": {
            "params": {
              "delegation": "Delegation - The delegation to get the type of"
            },
            "returns": {
              "_0": "bytes32 - The type of the delegation"
            }
          },
          "getInvocationsTypedDataHash((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)))": {
            "params": {
              "invocations": "Invocations"
            },
            "returns": {
              "_0": "bytes32 - The type of the Invocations"
            }
          },
          "invoke(((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)),bytes)[])": {
            "params": {
              "signedInvocations": "SignedInvocation[] - The batch of signed invocations to process."
            },
            "returns": {
              "success": "bool - Whether the batch of invocations was successfully processed."
            }
          },
          "verifyDelegationSignature(((address,bytes32,(address,bytes)[]),bytes))": {
            "params": {
              "signedDelegation": "- The delegation to verify"
            },
            "returns": {
              "_0": "address - The address of the account authorizing this delegation to act on its behalf."
            }
          },
          "verifyInvocationSignature(((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)),bytes))": {
            "params": {
              "signedInvocation": "- The signed invocation to verify"
            },
            "returns": {
              "_0": "address - The address of the account authorizing this invocation to act on its behalf."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "contractInvoke(((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[])": {
            "notice": "Allows a smart contract to submit a batch of invocations for processing, allowing itself to be the delegate."
          },
          "getDelegationTypedDataHash((address,bytes32,(address,bytes)[]))": {
            "notice": "Returns the typehash for this contract's delegation signatures."
          },
          "getInvocationsTypedDataHash((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)))": {
            "notice": "Returns the typehash for this contract's invocation signatures."
          },
          "invoke(((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)),bytes)[])": {
            "notice": "Allows anyone to submit a batch of signed invocations for processing."
          },
          "verifyDelegationSignature(((address,bytes32,(address,bytes)[]),bytes))": {
            "notice": "Verifies that the given delegation is valid."
          },
          "verifyInvocationSignature(((((address,uint256,bytes),((address,bytes32,(address,bytes)[]),bytes)[])[],(uint256,uint256)),bytes))": {
            "notice": "Verifies that the given invocation is valid."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@prb/math/=node_modules/@prb/math/",
        ":@prb/test/=lib/prb-test/src/",
        ":delegatable/=lib/delegatable/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":prb-test/=lib/prb-test/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "lib/delegatable/interfaces/IDelegatable.sol": "IDelegatable"
      },
      "libraries": {}
    },
    "sources": {
      "lib/delegatable/TypesAndDecoders.sol": {
        "keccak256": "0x503755ef25fc88df5586141f238ae10f422c830d6fd63e47ba970f80d48fd4f8",
        "urls": [
          "bzz-raw://ed80d6642f0b08b312649d8194eacb6d113fc6e44b24c1c24cf6e352249f88ed",
          "dweb:/ipfs/QmRoo8B8n1BnY25gausX9P92Zqojybk5dWZR1W8jG7kxKW"
        ],
        "license": "MIT"
      },
      "lib/delegatable/interfaces/IDelegatable.sol": {
        "keccak256": "0xe3439f9d371e4ded7980f4a78d52c0d6c0e02b73502d3bdf54a0a88afad4561e",
        "urls": [
          "bzz-raw://bf59a9780efc19727bbb0f99ab75d66d81b124d42f0c9dd580516407999b4d05",
          "dweb:/ipfs/QmWEjpbZ4wEg4HFAwzJbC8jmLrGygfyDGSSSyiSoKopHDm"
        ],
        "license": "MIT"
      },
      "lib/delegatable/libraries/ECRecovery.sol": {
        "keccak256": "0x203c4ed012c45cbc0c74a7854fc20012d66d808e1518a0e48d6de3f55d20e40d",
        "urls": [
          "bzz-raw://b946f583a512e33b6d16da5e0c2b491f4c30c6dab004377d71e30ae22653d065",
          "dweb:/ipfs/QmXvkAEBUfp7FZE5ygxu6fHF3579AsCwFL649jWQJibc67"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/delegatable/interfaces/IDelegatable.sol",
    "id": 1158,
    "exportedSymbols": {
      "CAVEAT_TYPEHASH": [
        739
      ],
      "Caveat": [
        734
      ],
      "DELEGATION_TYPEHASH": [
        729
      ],
      "Delegation": [
        724
      ],
      "ECRecovery": [
        1225
      ],
      "EIP712DOMAIN_TYPEHASH": [
        656
      ],
      "EIP712Decoder": [
        1084
      ],
      "EIP712Domain": [
        651
      ],
      "IDelegatable": [
        1157
      ],
      "INVOCATIONS_TYPEHASH": [
        682
      ],
      "INVOCATION_TYPEHASH": [
        669
      ],
      "Invocation": [
        664
      ],
      "Invocations": [
        677
      ],
      "REPLAYPROTECTION_TYPEHASH": [
        715
      ],
      "ReplayProtection": [
        710
      ],
      "SIGNEDDELEGATION_TYPEHASH": [
        750
      ],
      "SIGNEDINVOCATION_TYPEHASH": [
        693
      ],
      "SignedDelegation": [
        745
      ],
      "SignedInvocation": [
        688
      ],
      "TRANSACTION_TYPEHASH": [
        705
      ],
      "Transaction": [
        700
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:2516:4",
    "nodes": [
      {
        "id": 1086,
        "nodeType": "PragmaDirective",
        "src": "31:24:4",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 1087,
        "nodeType": "ImportDirective",
        "src": "57:33:4",
        "absolutePath": "lib/delegatable/TypesAndDecoders.sol",
        "file": "../TypesAndDecoders.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1158,
        "sourceUnit": 1085,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1157,
        "nodeType": "ContractDefinition",
        "src": "92:2454:4",
        "nodes": [
          {
            "id": 1097,
            "nodeType": "FunctionDefinition",
            "src": "424:93:4",
            "documentation": {
              "id": 1088,
              "nodeType": "StructuredDocumentation",
              "src": "121:298:4",
              "text": " @notice Allows a smart contract to submit a batch of invocations for processing, allowing itself to be the delegate.\n @param batch Invocation[] - The batch of invocations to process.\n @return success bool - Whether the batch of invocations was successfully processed."
            },
            "functionSelector": "5c6d9f0c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "contractInvoke",
            "nameLocation": "433:14:4",
            "parameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "batch",
                  "nameLocation": "470:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1097,
                  "src": "448:27:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Invocation_$664_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Invocation[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1090,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1089,
                        "name": "Invocation",
                        "nameLocations": [
                          "448:10:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 664,
                        "src": "448:10:4"
                      },
                      "referencedDeclaration": 664,
                      "src": "448:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Invocation_$664_storage_ptr",
                        "typeString": "struct Invocation"
                      }
                    },
                    "id": 1091,
                    "nodeType": "ArrayTypeName",
                    "src": "448:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Invocation_$664_storage_$dyn_storage_ptr",
                      "typeString": "struct Invocation[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "447:29:4"
            },
            "returnParameters": {
              "id": 1096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1095,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1097,
                  "src": "511:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1094,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "510:6:4"
            },
            "scope": 1157,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1107,
            "nodeType": "FunctionDefinition",
            "src": "812:111:4",
            "documentation": {
              "id": 1098,
              "nodeType": "StructuredDocumentation",
              "src": "523:284:4",
              "text": " @notice Allows anyone to submit a batch of signed invocations for processing.\n @param signedInvocations SignedInvocation[] - The batch of signed invocations to process.\n @return success bool - Whether the batch of invocations was successfully processed."
            },
            "functionSelector": "2fad7efc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "invoke",
            "nameLocation": "821:6:4",
            "parameters": {
              "id": 1103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1102,
                  "mutability": "mutable",
                  "name": "signedInvocations",
                  "nameLocation": "856:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "828:45:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SignedInvocation_$688_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct SignedInvocation[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1100,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1099,
                        "name": "SignedInvocation",
                        "nameLocations": [
                          "828:16:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 688,
                        "src": "828:16:4"
                      },
                      "referencedDeclaration": 688,
                      "src": "828:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignedInvocation_$688_storage_ptr",
                        "typeString": "struct SignedInvocation"
                      }
                    },
                    "id": 1101,
                    "nodeType": "ArrayTypeName",
                    "src": "828:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SignedInvocation_$688_storage_$dyn_storage_ptr",
                      "typeString": "struct SignedInvocation[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:47:4"
            },
            "returnParameters": {
              "id": 1106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1105,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "914:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "909:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1104,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "908:14:4"
            },
            "scope": 1157,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1116,
            "nodeType": "FunctionDefinition",
            "src": "1148:122:4",
            "documentation": {
              "id": 1108,
              "nodeType": "StructuredDocumentation",
              "src": "929:214:4",
              "text": " @notice Returns the typehash for this contract's delegation signatures.\n @param delegation Delegation - The delegation to get the type of\n @return bytes32 - The type of the delegation"
            },
            "functionSelector": "97182ed6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDelegationTypedDataHash",
            "nameLocation": "1157:26:4",
            "parameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "delegation",
                  "nameLocation": "1202:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "1184:28:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Delegation_$724_memory_ptr",
                    "typeString": "struct Delegation"
                  },
                  "typeName": {
                    "id": 1110,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1109,
                      "name": "Delegation",
                      "nameLocations": [
                        "1184:10:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 724,
                      "src": "1184:10:4"
                    },
                    "referencedDeclaration": 724,
                    "src": "1184:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Delegation_$724_storage_ptr",
                      "typeString": "struct Delegation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1183:30:4"
            },
            "returnParameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1114,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "1261:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1260:9:4"
            },
            "scope": 1157,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1125,
            "nodeType": "FunctionDefinition",
            "src": "1462:125:4",
            "documentation": {
              "id": 1117,
              "nodeType": "StructuredDocumentation",
              "src": "1276:181:4",
              "text": " @notice Returns the typehash for this contract's invocation signatures.\n @param invocations Invocations\n @return bytes32 - The type of the Invocations"
            },
            "functionSelector": "60b6d768",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInvocationsTypedDataHash",
            "nameLocation": "1471:27:4",
            "parameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "invocations",
                  "nameLocation": "1518:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "1499:30:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Invocations_$677_memory_ptr",
                    "typeString": "struct Invocations"
                  },
                  "typeName": {
                    "id": 1119,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1118,
                      "name": "Invocations",
                      "nameLocations": [
                        "1499:11:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 677,
                      "src": "1499:11:4"
                    },
                    "referencedDeclaration": 677,
                    "src": "1499:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Invocations_$677_storage_ptr",
                      "typeString": "struct Invocations"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1498:32:4"
            },
            "returnParameters": {
              "id": 1124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1123,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "1578:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1577:9:4"
            },
            "scope": 1157,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1138,
            "nodeType": "FunctionDefinition",
            "src": "1593:194:4",
            "functionSelector": "d327c1eb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getEIP712DomainHash",
            "nameLocation": "1602:19:4",
            "parameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1127,
                  "mutability": "mutable",
                  "name": "contractName",
                  "nameLocation": "1645:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "1631:26:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1126,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1129,
                  "mutability": "mutable",
                  "name": "version",
                  "nameLocation": "1681:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "1667:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1128,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1131,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "1706:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "1698:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1133,
                  "mutability": "mutable",
                  "name": "verifyingContract",
                  "nameLocation": "1731:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "1723:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1621:133:4"
            },
            "returnParameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1138,
                  "src": "1778:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1777:9:4"
            },
            "scope": 1157,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1147,
            "nodeType": "FunctionDefinition",
            "src": "2036:133:4",
            "documentation": {
              "id": 1139,
              "nodeType": "StructuredDocumentation",
              "src": "1793:238:4",
              "text": " @notice Verifies that the given invocation is valid.\n @param signedInvocation - The signed invocation to verify\n @return address - The address of the account authorizing this invocation to act on its behalf."
            },
            "functionSelector": "caced6c5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "verifyInvocationSignature",
            "nameLocation": "2045:25:4",
            "parameters": {
              "id": 1143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1142,
                  "mutability": "mutable",
                  "name": "signedInvocation",
                  "nameLocation": "2095:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "2071:40:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedInvocation_$688_memory_ptr",
                    "typeString": "struct SignedInvocation"
                  },
                  "typeName": {
                    "id": 1141,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1140,
                      "name": "SignedInvocation",
                      "nameLocations": [
                        "2071:16:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 688,
                      "src": "2071:16:4"
                    },
                    "referencedDeclaration": 688,
                    "src": "2071:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedInvocation_$688_storage_ptr",
                      "typeString": "struct SignedInvocation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2070:42:4"
            },
            "returnParameters": {
              "id": 1146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1145,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1147,
                  "src": "2160:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2160:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2159:9:4"
            },
            "scope": 1157,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1156,
            "nodeType": "FunctionDefinition",
            "src": "2411:133:4",
            "documentation": {
              "id": 1148,
              "nodeType": "StructuredDocumentation",
              "src": "2175:231:4",
              "text": " @notice Verifies that the given delegation is valid.\n @param signedDelegation - The delegation to verify\n @return address - The address of the account authorizing this delegation to act on its behalf."
            },
            "functionSelector": "8a04499e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "verifyDelegationSignature",
            "nameLocation": "2420:25:4",
            "parameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "signedDelegation",
                  "nameLocation": "2470:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "2446:40:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedDelegation_$745_memory_ptr",
                    "typeString": "struct SignedDelegation"
                  },
                  "typeName": {
                    "id": 1150,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1149,
                      "name": "SignedDelegation",
                      "nameLocations": [
                        "2446:16:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 745,
                      "src": "2446:16:4"
                    },
                    "referencedDeclaration": 745,
                    "src": "2446:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedDelegation_$745_storage_ptr",
                      "typeString": "struct SignedDelegation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2445:42:4"
            },
            "returnParameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1154,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "2535:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2534:9:4"
            },
            "scope": 1157,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IDelegatable",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          1157
        ],
        "name": "IDelegatable",
        "nameLocation": "102:12:4",
        "scope": 1158,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 4
}