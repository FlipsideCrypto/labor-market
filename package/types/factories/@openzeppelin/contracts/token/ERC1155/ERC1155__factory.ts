/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155,
  ERC1155Interface,
} from "../../../../../@openzeppelin/contracts/token/ERC1155/ERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620002175762001772803803806200001d816200021c565b92833981019060208082840312620002175781516001600160401b039283821162000217570192601f9080828601121562000217578451848111620001ec57601f199562000071828501881686016200021c565b928284528583830101116200021757849060005b83811062000202575050600091830101528051938411620001ec57600254926001938481811c91168015620001e1575b82821014620001cb578381116200017f575b50809285116001146200011457508394509083929160009462000108575b50501b916000199060031b1c1916176002555b60405161152f9081620002438239f35b015192503880620000e5565b929484908116600260005284600020946000905b888383106200016457505050106200014a575b505050811b01600255620000f8565b015160001960f88460031b161c191690553880806200013b565b85870151885590960195948501948793509081019062000128565b6002600052816000208480880160051c820192848910620001c1575b0160051c019085905b828110620001b4575050620000c7565b60008155018590620001a4565b925081926200019b565b634e487b7160e01b600052602260045260246000fd5b90607f1690620000b5565b634e487b7160e01b600052604160045260246000fd5b81810183015185820184015286920162000085565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620001ec5760405256fe60406080815260048036101561001457600080fd5b600091823560e01c8062fdd58e14610e4c57806301ffc9a714610d5c5780630e89341c14610bef5780632eb2c2d6146108365780634e1273f414610611578063a22cb465146104be578063e985e9c5146104415763f242432a1461007757600080fd5b3461043d5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261043d576100ae610e9a565b836100b7610ec2565b916044359060643560843567ffffffffffffffff8111610439576100de9036908901611029565b9273ffffffffffffffffffffffffffffffffffffffff80931692338414801561041a575b61010b9061122f565b8616906101198215156112ba565b610122816114c3565b5061012c836114c3565b508086526020968688528887208588528852838988205461014f82821015611345565b838952888a528a8920878a528a520389882055818752868852888720838852885288872061017e8582546113d0565b905582858a51848152868b8201527fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628c3392a43b6101ba578580f35b889587946102148a51978896879586947ff23a6e61000000000000000000000000000000000000000000000000000000009c8d8752339087015260248601526044850152606484015260a0608484015260a4830190610ee5565b03925af18691816103eb575b5061032f575050600190610232611415565b6308c379a0146102e2575b506102525750505b3880808381808080808580f35b6102de9250519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160809060208152603460208201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560408201527f526563656976657220696d706c656d656e74657200000000000000000000000060608201520190565b0390fd5b6102ea611433565b806102f5575061023d565b6102de859185519384937f08c379a00000000000000000000000000000000000000000000000000000000085528401526024830190610ee5565b7fffffffff000000000000000000000000000000000000000000000000000000001603905061035f575050610245565b6102de9250519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160809060208152602860208201527f455243313135353a204552433131353552656365697665722072656a6563746560408201527f6420746f6b656e7300000000000000000000000000000000000000000000000060608201520190565b61040c919250843d8611610413575b6104048183610f43565b8101906113dd565b9038610220565b503d6103fa565b508386526001602090815288872033885290528786205460ff16610102565b8480fd5b8280fd5b8382346104ba57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104ba5760ff8160209361047f610e9a565b610487610ec2565b73ffffffffffffffffffffffffffffffffffffffff91821683526001875283832091168252855220549151911615158152f35b5080fd5b503461043d57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261043d576104f5610e9a565b90602435918215158093036104395773ffffffffffffffffffffffffffffffffffffffff169283331461058f575033845260016020528084208385526020528084207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152fd5b50903461043d57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261043d57803567ffffffffffffffff808211610439573660238301121561043957818301359061066c82610fb3565b9261067986519485610f43565b82845260209260248486019160051b8301019136831161083257602401905b828210610802575050506024359081116107fe576106b99036908501610fcb565b92825184510361077d57508151947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06107096106f488610fb3565b976107018851998a610f43565b808952610fb3565b0136838801375b8251811015610767578061075273ffffffffffffffffffffffffffffffffffffffff61073f61076294876111ec565b511661074b83886111ec565b51906110d2565b61075c82896111ec565b52611190565b610710565b8451828152806107798185018961109e565b0390f35b6084918551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152fd5b8580fd5b813573ffffffffffffffffffffffffffffffffffffffff8116810361082e578152908401908401610698565b8980fd5b8880fd5b50903461043d577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9160a083360112610beb57610871610e9a565b9261087a610ec2565b9367ffffffffffffffff93604435858111610be75761089c9036908301610fcb565b90606435868111610832576108b49036908301610fcb565b95608435908111610832576108cc9036908301611029565b9373ffffffffffffffffffffffffffffffffffffffff809416933385148015610bc8575b6108f99061122f565b8351885103610b45578816946109108615156112ba565b895b8a855182101561099657908961098a8a6109919461093b85610934818d6111ec565b51956111ec565b51938082526020908282528383208d84528252858d858520549061096183831015611345565b838652858552868620908652845203848420558252818152828220908d835252209182546113d0565b9055611190565b610912565b50509094939596929197848789518a81527f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb6109d48c83018861109e565b918083036020820152806109e933948b61109e565b0390a43b6109f5578880f35b865194859384937fbc197c810000000000000000000000000000000000000000000000000000000098898652338c87015260248601526044850160a0905260a48501610a409161109e565b82858203016064860152610a539161109e565b90838203016084840152610a6691610ee5565b0381885a94602095f1859181610b25575b50610af75750506001610a88611415565b6308c379a014610aa6575b6102525750505b38808080808080808880f35b610aae611433565b80610ab95750610a93565b90506102de9160209450519384937f08c379a00000000000000000000000000000000000000000000000000000000085528401526024830190610ee5565b7fffffffff00000000000000000000000000000000000000000000000000000000160361035f575050610a9a565b610b3e91925060203d8111610413576104048183610f43565b9038610a77565b60848360208951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152fd5b50848a5260016020908152878b20338c529052868a205460ff166108f0565b8780fd5b8380fd5b508290346104ba57602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261043d57805192806002549060019082821c928281168015610d52575b8785108114610d26578899509688969785829a529182600014610ce1575050600114610c85575b5050506107799291610c76910385610f43565b51928284938452830190610ee5565b9190869350600283527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b828410610cc95750505082010181610c76610779610c63565b8054848a018601528895508794909301928101610cb0565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168782015293151560051b86019093019350849250610c7691506107799050610c63565b60248360228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b93607f1693610c3c565b50903461043d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261043d5735907fffffffff00000000000000000000000000000000000000000000000000000000821680920361043d57602092507fd9b67a26000000000000000000000000000000000000000000000000000000008214918215610e22575b8215610df8575b50519015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000014915038610def565b7f0e89341c0000000000000000000000000000000000000000000000000000000081149250610de8565b8382346104ba57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104ba57602090610e93610e8a610e9a565b602435906110d2565b9051908152f35b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610ebd57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610ebd57565b919082519283825260005b848110610f2f5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610ef0565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610f8457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111610f845760051b60200190565b81601f82011215610ebd57803591610fe283610fb3565b92610ff06040519485610f43565b808452602092838086019260051b820101928311610ebd578301905b82821061101a575050505090565b8135815290830190830161100c565b81601f82011215610ebd5780359067ffffffffffffffff8211610f84576040519261107c60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185610f43565b82845260208383010111610ebd57816000926020809301838601378301015290565b90815180825260208080930193019160005b8281106110be575050505090565b8351855293810193928101926001016110b0565b73ffffffffffffffffffffffffffffffffffffffff1690811561110c57600052600060205260406000209060005260205260406000205490565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e6572000000000000000000000000000000000000000000006064820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111bd5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80518210156112005760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1561123657565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206e6f7220617070726f76656400000000000000000000000000000000006064820152fd5b156112c157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b1561134c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152fd5b919082018092116111bd57565b90816020910312610ebd57517fffffffff0000000000000000000000000000000000000000000000000000000081168103610ebd5790565b60009060033d1161142257565b905060046000803e60005160e01c90565b600060443d106114af576040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc91823d016004833e815167ffffffffffffffff918282113d6024840111176114b2578184019485519384116114ba573d850101602084870101116114b257506114af92910160200190610f43565b90565b949350505050565b50949350505050565b604051906040820182811067ffffffffffffffff821117610f84576040526001825260208201602036823782511561120057529056fea264697066735822122093d78f1cd897b02c33eff2afd1b53c64a0fe8e5ca62e2fd1a24cfb5887aaafe564736f6c63430008110033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(uri_, overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
