/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { NBadge, NBadgeInterface } from "../../../src/auth/NBadge";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nodes",
    outputs: [
      {
        internalType: "contract IERC1155",
        name: "badge",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "required",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610141806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631c53c2801461003b578063dc8452cd1461008a575b600080fd5b61004e6100493660046100f2565b6100a1565b6040805173ffffffffffffffffffffffffffffffffffffffff909516855260208501939093529183015260608201526080015b60405180910390f35b61009360005481565b604051908152602001610081565b600181815481106100b157600080fd5b6000918252602090912060049091020180546001820154600283015460039093015473ffffffffffffffffffffffffffffffffffffffff9092169350919084565b60006020828403121561010457600080fd5b503591905056fea264697066735822122093ee17a9676575f772896abd247c3fc6c20cc31c8bce5f9a4767033ba039675364736f6c63430008110033";

type NBadgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NBadgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NBadge__factory extends ContractFactory {
  constructor(...args: NBadgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NBadge> {
    return super.deploy(overrides || {}) as Promise<NBadge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NBadge {
    return super.attach(address) as NBadge;
  }
  override connect(signer: Signer): NBadge__factory {
    return super.connect(signer) as NBadge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NBadgeInterface {
    return new utils.Interface(_abi) as NBadgeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NBadge {
    return new Contract(address, _abi, signerOrProvider) as NBadge;
  }
}
