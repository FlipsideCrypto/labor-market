/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC1155FreeMint,
  ERC1155FreeMintInterface,
} from "../../../src/Mocks/ERC1155FreeMint";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "freeBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523462000027575b6200001562000259565b604051611af9620003908239611af990f35b62000030600080fd5b6200000b565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006f57604052565b6200007962000036565b604052565b90620000956200008d60405190565b92836200004d565b565b602090620000b8906001600160401b038111620000bc57601f01601f191690565b0190565b620000c662000036565b601f01601f191690565b90620000e6620000e08362000097565b6200007e565b918252565b620000f76004620000d0565b637572692f60e01b602082015290565b62000111620000eb565b90565b50634e487b7160e01b600052602260045260246000fd5b906001600283049216801562000152575b60208310146200014857565b6200009562000114565b91607f16916200013c565b6200011162000111620001119290565b919062000182620001116200019e936200015d565b9083549160001960089290920291821b911b9181191691161790565b9055565b62000095916000916200016d565b818110620001bc575050565b80620001cc6000600193620001a2565b01620001b0565b9190601f8111620001e357505050565b620001f76200009593600052602060002090565b906020601f8401819004830193106200021b575b6020601f909101040190620001b0565b90915081906200020b565b6200023f60046200023883546200012b565b83620001d3565b6008637572692f60e01b019055565b620000959062000226565b6200026d6200026762000107565b62000279565b6200009560036200024e565b620000959062000382565b906200028e815190565b906001600160401b03821162000366575b620002b782620002b085546200012b565b85620001d3565b602090601f8311600114620002f6576200019e929160009183620002ea575b5050600019600883021c1916906002021790565b015190503880620002d6565b601f198316916200030c85600052602060002090565b9260005b8181106200034d5750916002939185600196941062000333575b50505002019055565b01516000196008601f8516021c191690553880806200032a565b9193602060018192878701518155019501920162000310565b6200037062000036565b6200029f565b90620000959162000284565b620000959060026200037656fe60806040526004361015610018575b610016600080fd5b005b60003560e01c8062fdd58e146100f357806301ffc9a7146100ea5780630e89341c146100e15780632eb2c2d6146100d85780632ef59533146100cf5780634e1273f4146100c6578063615544e2146100bd578063a22cb465146100b4578063e985e9c5146100ab578063f242432a146100a25763f72df6510361000e5761009d61099c565b61000e565b5061009d6108a0565b5061009d610824565b5061009d6107cb565b5061009d61075d565b5061009d610726565b5061009d6105a3565b5061009d610535565b5061009d6102b4565b5061009d6101ee565b5061009d610175565b600080fd5b6001600160a01b031690565b90565b6001600160a01b0381165b036100fc57565b9050359061012f82610110565b565b8061011b565b9050359061012f82610131565b919061010d90604084820312610168575b61015f8185610122565b93602001610137565b610170600080fd5b610155565b50346101a7575b6101a361019361018d366004610144565b90610af1565b6040519182918290815260200190565b0390f35b6101af600080fd5b61017c565b6001600160e01b0319811661011b565b9050359061012f826101b4565b9061010d91602081830312156101c4576101e9600080fd5b6101c4565b503461021e575b6101a361020b6102063660046101d1565b6109c7565b6040515b91829182901515815260200190565b610226600080fd5b6101f5565b9061010d916020818303121561013757610243600080fd5b610137565b60005b83811061025b5750506000910152565b818101518382015260200161024b565b601f01601f191690565b61029661026b60209361029f9361028a815190565b80835293849260200190565b95869101610248565b0190565b602080825261010d92910190610275565b50346102dd575b6101a36102d16102cc36600461022b565b611773565b604051918291826102a3565b6102e5600080fd5b6102bb565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761032257604052565b61032a6102ea565b604052565b9061012f61033c60405190565b9283610301565b602080916001600160401b03811161035a57020190565b6103626102ea565b020190565b9092919261037c61037782610343565b61032f565b93818552602080860192028301928184116103ba575b915b8383106103a15750505050565b602080916103af8486610137565b815201920191610394565b6103c2600080fd5b610392565b9061010d9181601f820112156103e3575b602081359101610367565b6103eb600080fd5b6103d8565b61029f6020916001600160401b03811161040e57601f01601f191690565b61026b6102ea565b90826000939282370152565b92919061012f91610435610377836103f0565b94828652602086019183820111156104165761044f600080fd5b610416565b9061010d9181601f82011215610470575b602081359101610422565b610478600080fd5b610465565b919060a083820312610528575b6104948184610122565b926104a28260208301610122565b9261010d6104c58460408501356001600160401b03811161051b575b85016103c7565b936104e58160608601356001600160401b03811161050e575b86016103c7565b936080810135906001600160401b038211610501575b01610454565b610509600080fd5b6104fb565b610516600080fd5b6104de565b610523600080fd5b6104be565b610530600080fd5b61048a565b5034610558575b61055361054a36600461047d565b93929092610db6565b604051005b610560600080fd5b61053c565b9091606082840312610596575b61010d61057f8484610122565b9361058d8160208601610137565b93604001610137565b61059e600080fd5b610572565b50346105be575b6105536105b8366004610565565b9161185e565b6105c6600080fd5b6105aa565b909291926105db61037782610343565b9381855260208086019202830192818411610619575b915b8383106106005750505050565b6020809161060e8486610122565b8152019201916105f3565b610621600080fd5b6105f1565b9061010d9181601f82011215610642575b6020813591016105cb565b61064a600080fd5b610637565b919061010d906040848203126106b2575b61067c8185356001600160401b0381116106a5575b8601610626565b936020810135906001600160401b038211610698575b016103c7565b6106a0600080fd5b610692565b6106ad600080fd5b610675565b6106ba600080fd5b610660565b906106df6106d86106ce845190565b8084529260200190565b9260200190565b9060005b8181106106f05750505090565b90919261070d6107066001928651815260200190565b9460200190565b9291016106e3565b602080825261010d929101906106bf565b5034610750575b6101a361074461073e36600461064f565b90610c3c565b60405191829182610715565b610758600080fd5b61072d565b5034610778575b610553610772366004610565565b9161179d565b610780600080fd5b610764565b80151561011b565b9050359061012f82610785565b919061010d906040848203126107be575b6107b58185610122565b9360200161078d565b6107c6600080fd5b6107ab565b50346107e6575b6105536107e036600461079a565b90610cdf565b6107ee600080fd5b6107d2565b919061010d90604084820312610817575b61080e8185610122565b93602001610122565b61081f600080fd5b610804565b5034610842575b6101a361020b61083c3660046107f3565b90610cea565b61084a600080fd5b61082b565b919060a083820312610893575b6108668184610122565b926108748260208301610122565b9261010d6108858460408501610137565b936104e58160608601610137565b61089b600080fd5b61085c565b50346108be575b6105536108b536600461084f565b93929092610d70565b6108c6600080fd5b6108a7565b909182601f83011215610911575b60208235926001600160401b038411610904575b0192602083028401116108fc57565b61012f600080fd5b61090c600080fd5b6108ed565b610919600080fd5b6108d9565b60608183031261098f575b6109458282356001600160401b038111610982575b83016108cb565b92909361010d61096a8360208601356001600160401b038111610975575b86016108cb565b939094604001610137565b61097d600080fd5b610963565b61098a600080fd5b61093e565b610997600080fd5b610929565b50346109ba575b6105536109b136600461091e565b93929092611a53565b6109c2600080fd5b6109a3565b636cdb3d1360e11b6001600160e01b03198216149081156109f7575b81156109ed575090565b61010d9150611663565b6001600160e01b031981166303a24d0760e21b1491506109e3565b61010161010d61010d9290565b61010d90610a12565b15610a2f57565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b6064820152608490fd5b0390fd5b61010d61010d61010d9290565b90610aa290610a8b565b600052602052604060002090565b61010d90610101906001600160a01b031682565b61010d90610ab0565b61010d90610ac4565b90610aa290610acd565b61010d9081565b61010d9054610ae0565b610b3190610b2c61010d93610b04600090565b506000610b27610b1661010183610a1f565b6001600160a01b0386161415610a28565b610a98565b610ad6565b610ae7565b15610b3d57565b60405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608490fd5b90610ba161037783610343565b918252565b369037565b9061012f610bc1610bbb84610b94565b93610343565b601f190160208401610ba6565b50634e487b7160e01b600052601160045260246000fd5b6001906000198114610bf5570190565b61029f610bce565b50634e487b7160e01b600052603260045260246000fd5b9060208091610c21845190565b811015610c2f575b02010190565b610c37610bfd565b610c29565b90610c60610c48835190565b610c5a610c5661010d855190565b9190565b14610b36565b610c70610c6b835190565b610bab565b91610c7b6000610a8b565b610c8661010d835190565b811015610cd95780610ccf610cc2610cb1610ca4610cd49587610c14565b516001600160a01b031690565b61018d610cbe8589610c14565b5190565b610ccc8388610c14565b52565b610be5565b610c7b565b50505090565b61012f919033611205565b61010d91610b2c610d0592610cfd600090565b506001610ad6565b5460ff1690565b15610d1357565b60405162461bcd60e51b815260206004820152602f60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526e195c881b9bdc88185c1c1c9bdd9959608a1b6064820152608490fd5b61012f9493929190610da0335b6001600160a01b0381166001600160a01b03841614908115610da5575b50610d0c565b610ed8565b610db0915083610cea565b38610d9a565b61012f9493929190610dc733610d7d565b611054565b15610dd357565b60405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b15610e2d57565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608490fd5b90600019905b9181191691161790565b90610ea561010d610eac92610a8b565b8254610e85565b9055565b91908201809211610ebd57565b61012f610bce565b90815260408101929161012f9160200152565b9061012f949392916000610f03610ef161010183610a1f565b6001600160a01b0385165b1415610dcc565b610f77610f5f84610b2c873395610f198261162d565b50610f238b61162d565b50610b27610f4c8c610f3c610b318c610b2c8888610a98565b610f4882821015610e26565b0390565b610f5a8a610b2c8686610a98565b610e95565b610f7187610f6c83610ae7565b610eb0565b90610e95565b7fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62610fa182610acd565b610faa84610acd565b90610fb486610acd565b92610fbe60405190565b80610fca8b8b83610ec5565b0390a461138d565b15610fd957565b60405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608490fd5b604080825261010d939192611046918401906106bf565b9160208184039101526106bf565b9291949094611078611064825190565b611072610c5661010d875190565b14610fd2565b60009161109961108a61010185610a1f565b6001600160a01b038916610efc565b33956110a484610a8b565b6110af61010d855190565b8110156111215780610ccf88610f716111128d610b2c8c61110c8d610f5a6110ec8f8c6110e661111c9f610cbe90610cbe94610c14565b96610c14565b98610b2c856111068c610f3c610b3186610b2c868b610a98565b94610a98565b8c610a98565b91610f6c83610ae7565b6110a4565b5094909691925061012f957f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb61115682610acd565b61115f84610acd565b9061116986610acd565b9261117360405190565b8061117f8b8b8361102f565b0390a46115d2565b1561118e57565b60405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608490fd5b9060ff90610e8b565b906111fe61010d610eac92151590565b82546111e5565b6112236001600160a01b0383166001600160a01b0383161415611187565b61123b8361123684610b2c856001610ad6565b6111ee565b61127b61127161126b7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3193610acd565b93610acd565b9361020f60405190565b0390a3565b9050519061012f826101b4565b9061010d9160208183031215611280576112a5600080fd5b611280565b91936112ed61010d96946112e66112f494976112d660a088019960008901906001600160a01b03169052565b6001600160a01b03166020870152565b6040850152565b6060830152565b6080818403910152610275565b60009060033d1161130e57565b905060046000803e60005160e01c90565b60009060443d1061012f5760405160043d036004823e8051903d60248301116001600160401b03831117611389578181019182516001600160401b0381116113835780602085010160043d038401106113835761010d939495506020010190610301565b50505050565b5050565b9094939492919261139d84611651565b6113aa575b505050505050565b60006113bf6113ba602096610acd565b610acd565b926113ee63f23a6e61976113d260405190565b998a97889687956113e38d60e01b90565b8752600487016112aa565b03925af16000928161153d575b506114be575050600161140c611301565b6308c379a014611489575b611427575b3880808080806113a2565b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608490fd5b61149161131f565b8061149c5750611417565b610a87906114a960405190565b62461bcd60e51b8152918291600483016102a3565b6114d46114e29160e01b63ffffffff60e01b1690565b916001600160e01b03191690565b1461141c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608490fd5b61155f91935060203d8111611566575b6115578183610301565b81019061128d565b91386113fb565b503d61154d565b93906115b69061010d96946115a96115c49561159960a08a019460008b01906001600160a01b03169052565b6001600160a01b03166020890152565b86820360408801526106bf565b9084820360608601526106bf565b916080818403910152610275565b909493949291926115e284611651565b6115ee57505050505050565b60006115fe6113ba602096610acd565b926113ee63bc197c819761161160405190565b998a97889687956116228d60e01b90565b87526004870161156d565b61010d61163d610c6b6001610a8b565b91610ccc61164b6000610a8b565b84610c14565b3b61165f610c566000610a8b565b1190565b6116736301ffc9a760e01b6114d4565b1490565b50634e487b7160e01b600052602260045260246000fd5b90600160028304921680156116b1575b60208310146116a957565b61012f611677565b91607f169161169e565b805460009392916116d86116ce8361168e565b8085529360200190565b916001811690811561172a57506001146116f157505050565b6117049192939450600052602060002090565b916000925b8184106117165750500190565b805484840152602090930192600101611709565b92949550505060ff1916825215156020020190565b9061010d916116bb565b9061012f6117639261175a60405190565b9384809261173f565b0383610301565b61010d90611749565b5061010d600361176a565b90610ba1610377836103f0565b61010d600061177e565b61010d61178b565b909161012f926117ab611795565b92611807565b156117b857565b60405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b9061012f939291600061181981610a1f565b906118386001600160a01b0383166001600160a01b03851614156117b1565b610f77610f5f84610b2c87339561184e8261162d565b506118588b61162d565b50610a98565b9061012f9291611919565b1561187057565b60405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b156118c857565b60405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608490fd5b919091600061192781610a1f565b926119466001600160a01b0385166001600160a01b0385161415611869565b61199133926119548761162d565b5061195e8361162d565b50611967611795565b50610f5a85610b2c8961110687611985610b3186610b2c868b610a98565b610f48828210156118c1565b6119c76119c16119c17fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6294610acd565b94610acd565b946119dd6119d460405190565b92839283610ec5565b0390a46119e8611795565b50565b156119f257565b60405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081a5b9c1d5d609a1b6044820152606490fd5b91602091811015611a3757020190565b610362610bfd565b3561010d81610110565b3561010d81610131565b91949392918194611a658487146119eb565b611a6f6000610a8b565b865b811015611ab957611ab281610ccf8a611aa9611aa4848b611a9e611a99611a719a8e8e611a27565b611a3f565b94611a27565b611a49565b8a6117ab611795565b9050611a6f565b509550505050505056fea26469706673582212200c5d18b4e3d354ec96bd912ac205362f2f47705190bdce51a20860a26b9b385064736f6c63430008110033";

type ERC1155FreeMintConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155FreeMintConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155FreeMint__factory extends ContractFactory {
  constructor(...args: ERC1155FreeMintConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155FreeMint> {
    return super.deploy(overrides || {}) as Promise<ERC1155FreeMint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155FreeMint {
    return super.attach(address) as ERC1155FreeMint;
  }
  override connect(signer: Signer): ERC1155FreeMint__factory {
    return super.connect(signer) as ERC1155FreeMint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155FreeMintInterface {
    return new utils.Interface(_abi) as ERC1155FreeMintInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155FreeMint {
    return new Contract(address, _abi, signerOrProvider) as ERC1155FreeMint;
  }
}
