/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20FreeMint,
  ERC20FreeMintInterface,
} from "../../../src/Mocks/ERC20FreeMint";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "freeBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523462000032575b62000020620000196200021d565b91620002b1565b60405161105762000501823961105790f35b6200003b600080fd5b6200000b565b600080fd5b50634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200007f57604052565b6200008962000046565b604052565b90620000a56200009d60405190565b92836200005d565b565b602090620000c8906001600160401b038111620000cc57601f01601f191690565b0190565b620000d662000046565b601f01601f191690565b60005b838110620000f45750506000910152565b8181015183820152602001620000e3565b929190620000a591620001226200011c83620000a7565b6200008e565b9482865260208601918382011115620000e0576200013e600080fd5b620000e0565b90620001639181601f8201121562000166575b60208151910162000105565b90565b6200016f600080fd5b62000157565b60ff8116036200004157565b90505190620000a58262000175565b90916060828403126200020e575b81516200016390620001c49085906001600160401b038111620001ff575b850162000144565b93620001e681602086015160018060401b038111620001f0575b860162000144565b9360400162000181565b620001f9600080fd5b620001de565b62000208600080fd5b620001bc565b62000217600080fd5b6200019e565b62000240620015588038038062000234816200008e565b92833981019062000190565b909192565b9060ff905b9181191691161790565b6200026462000163620001639290565b60ff1690565b906200027e62000163620002869262000254565b825462000245565b9055565b6200026462000163620001639260ff1690565b906200027e6200016362000286926200028a565b620000a59291620002c291620004e6565b620002d0601260056200026a565b60056200029d565b50634e487b7160e01b600052602260045260246000fd5b906001600283049216801562000316575b60208310146200030c57565b620000a5620002d8565b91607f169162000300565b9160001960089290920291821b911b6200024a565b6200016362000163620001639290565b91906200035b62000163620002869362000336565b90835462000321565b620000a59160009162000346565b8181106200037e575050565b806200038e600060019362000364565b0162000372565b9190601f8111620003a557505050565b620003b9620000a593600052602060002090565b906020601f840181900483019310620003dd575b6020601f90910104019062000372565b9091508190620003cd565b90620003f2815190565b906001600160401b038211620004ca575b6200041b82620004148554620002ef565b8562000395565b602090601f83116001146200045a57620002869291600091836200044e575b5050600019600883021c1916906002021790565b0151905038806200043a565b601f198316916200047085600052602060002090565b9260005b818110620004b15750916002939185600196941062000497575b50505002019055565b01516000196008601f8516021c191690553880806200048e565b9193602060018192878701518155019501920162000474565b620004d462000046565b62000403565b90620000a591620003e8565b90620004f8620000a5926003620004da565b6004620004da56fe60806040526004361015610018575b610016600080fd5b005b60003560e01c806306fdde0314610144578063095ea7b31461013b57806318160ddd1461013257806323b872dd146101295780632929abe6146101205780632e0f262514610117578063313ce5671461010e578063395093511461010557806370a08231146100fc57806390dd070a146100f357806395d89b41146100ea5780639883566e146100e1578063a457c2d7146100d8578063a9059cbb146100cf5763dd62ed3e0361000e576100ca610653565b61000e565b506100ca6105f7565b506100ca6105cc565b506100ca6105a4565b506100ca61057a565b506100ca610552565b506100ca610528565b506100ca6104e0565b506100ca6104b6565b506100ca610478565b506100ca610422565b506100ca610335565b506100ca6102bc565b506100ca61027f565b506100ca6101d6565b600080fd5b600091031261015d57565b610165600080fd5b565b60005b83811061017a5750506000910152565b818101518382015260200161016a565b6101ab6101b46020936101be9361019f815190565b80835293849260200190565b95869101610167565b601f01601f191690565b0190565b60208082526101d39291019061018a565b90565b5034610203575b6101e8366004610152565b6101ff6101f36107c0565b604051918291826101c2565b0390f35b61020b600080fd5b6101dd565b6001600160a01b031690565b6001600160a01b0381165b0361014d57565b905035906101658261021c565b80610227565b905035906101658261023b565b91906101d390604084820312610272575b610269818561022e565b93602001610241565b61027a600080fd5b61025f565b50346102af575b6101ff61029d61029736600461024e565b9061087e565b60405191829182901515815260200190565b6102b7600080fd5b610286565b50346102ea575b6102ce366004610152565b6101ff6102d96107e5565b6040515b9182918290815260200190565b6102f2600080fd5b6102c3565b9091606082840312610328575b6101d3610311848461022e565b9361031f816020860161022e565b93604001610241565b610330600080fd5b610304565b5034610353575b6101ff61029d61034d3660046102f7565b91610889565b61035b600080fd5b61033c565b909182601f8301121561039f575b602082359267ffffffffffffffff8411610392575b01926020830284011161015d57565b61039a600080fd5b610383565b6103a7600080fd5b61036e565b91604083830312610415575b6103f76103d883853567ffffffffffffffff8111610408575b8601610360565b93909460208101359067ffffffffffffffff82116103fb575b01610360565b9091565b610403600080fd5b6103f1565b610410600080fd5b6103d1565b61041d600080fd5b6103b8565b5034610445575b6104406104373660046103ac565b92919091610fb1565b604051005b61044d600080fd5b610429565b6101d3916008021c5b60ff1690565b906101d39154610452565b6101d360006005610461565b50346104a9575b61048a366004610152565b6101ff61049561046c565b6040519182918260ff909116815260200190565b6104b1600080fd5b61047f565b50346104d3575b6104c8366004610152565b6101ff610495610d3d565b6104db600080fd5b6104bd565b50346104fe575b6101ff61029d6104f836600461024e565b906108c6565b610506600080fd5b6104e7565b906101d3916020818303121561022e57610523600080fd5b61022e565b5034610545575b6101ff6102d961054036600461050b565b61082d565b61054d600080fd5b61052f565b503461056d575b61044061056736600461024e565b90610de6565b610575600080fd5b610559565b5034610597575b61058c366004610152565b6101ff6101f36107ca565b61059f600080fd5b610581565b50346105bf575b6104406105b936600461024e565b90610d47565b6105c7600080fd5b6105ab565b50346105ea575b6101ff61029d6105e436600461024e565b9061093f565b6105f2600080fd5b6105d3565b5034610615575b6101ff61029d61060f36600461024e565b90610849565b61061d600080fd5b6105fe565b91906101d390604084820312610646575b61063d818561022e565b9360200161022e565b61064e600080fd5b610633565b5034610671575b6101ff6102d961066b366004610622565b9061085e565b610679600080fd5b61065a565b50634e487b7160e01b600052602260045260246000fd5b90600160028304921680156106b8575b60208310146106b057565b61016561067e565b91607f16916106a5565b805460009392916106df6106d583610695565b8085529360200190565b916001811690811561073157506001146106f857505050565b61070b9192939450600052602060002090565b916000925b81841061071d5750500190565b805484840152602090930192600101610710565b92949550505060ff1916825215156020020190565b906101d3916106c2565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761078957604052565b610791610750565b604052565b906101656107b0926107a760405190565b93848092610746565b0383610767565b6101d390610796565b6101d360036107b7565b6101d360046107b7565b6101d39081565b6101d390546107d4565b6101d360026107db565b6101d390610210906001600160a01b031682565b6101d3906107ef565b6101d390610803565b9061081f9061080c565b600052602052604060002090565b6108446101d39161083c600090565b506000610815565b6107db565b610859919033610aa7565b610aa7565b600190565b6101d39161087961084492610871600090565b506001610815565b610815565b610859919033610c24565b610859929190610854833383610cf2565b50634e487b7160e01b600052601160045260246000fd5b919082018092116108be57565b61016561089a565b61085991906108df33926108da838561085e565b6108b1565b91610c24565b156108ec57565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b61085991906108df3392610953838561085e565b61095f828210156108e5565b0390565b6102106101d36101d39290565b6101d390610963565b1561098057565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b156109da57565b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b15610a3257565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b6101d36101d36101d39290565b906101d36101d3610aa392610a86565b9055565b610b30610b1d836000610aee610add610abf83610970565b6102106001600160a01b0382166001600160a01b038a161415610979565b6001600160a01b03841614156109d3565b610879610b0e88610b026108448986610815565b61095f82821015610a2b565b610b188784610815565b610a93565b610b2a856108da836107db565b90610a93565b610b70610b66610b607fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9361080c565b9361080c565b936102dd60405190565b0390a3565b15610b7c57565b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b15610bd457565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b610c63610c52610c346000610970565b6102106001600160a01b0382166001600160a01b0386161415610b75565b6001600160a01b0384161415610bcd565b610c7683610b1884610879856001610815565b610b70610b66610b607f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259361080c565b15610cad57565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b90610cfd818361085e565b6000198103610d0d575b50505050565b610d21936108df9161095f82821015610ca6565b38808080610d07565b6101d39061045b565b6101d39054610d2a565b6101d36005610d33565b9061016591610d9d565b15610d5857565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b6000610b30610b1d83610daf84610970565b93610dce6001600160a01b0386166001600160a01b0384161415610d51565b610879610ddf886108da60026107db565b6002610a93565b9061016591610eaa565b15610df757565b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b15610e4d57565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b919082039182116108be57565b600090610eff610eb983610970565b92610ed86001600160a01b0385166001600160a01b0385161415610df0565b610b1883610ef987610eed6108448487610815565b61095f82821015610e46565b92610815565b610b30610ddf84610f1060026107db565b610e9d565b15610f1c57565b60405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081a5b9c1d5d609a1b6044820152606490fd5b6001906000198114610f61570190565b6101be61089a565b50634e487b7160e01b600052603260045260246000fd5b91602091811015610f9057020190565b610f98610f69565b020190565b356101d38161021c565b356101d38161023b565b919392918193610fc2848614610f15565b610fcc6000610a86565b855b811015611018576110118161100c89611006611001848b610ffb610ff6610fce9a8e8e610f80565b610f9d565b94610f80565b610fa7565b90610d9d565b610f51565b9050610fcc565b5094505050505056fea26469706673582212202cec284e1872a9e8c476d761cc8499f1a4605efc878ada01bddd122fb778808f64736f6c63430008110033";

type ERC20FreeMintConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20FreeMintConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20FreeMint__factory extends ContractFactory {
  constructor(...args: ERC20FreeMintConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20FreeMint> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      overrides || {}
    ) as Promise<ERC20FreeMint>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      overrides || {}
    );
  }
  override attach(address: string): ERC20FreeMint {
    return super.attach(address) as ERC20FreeMint;
  }
  override connect(signer: Signer): ERC20FreeMint__factory {
    return super.connect(signer) as ERC20FreeMint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20FreeMintInterface {
    return new utils.Interface(_abi) as ERC20FreeMintInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20FreeMint {
    return new Contract(address, _abi, signerOrProvider) as ERC20FreeMint;
  }
}
