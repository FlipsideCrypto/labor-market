/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20FreeMint,
  ERC20FreeMintInterface,
} from "../../../src/mocks/ERC20FreeMint";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "freeBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526005805460ff191660121790553480156200001e57600080fd5b506040516200144438038062001444833981016040819052620000419162000146565b828260036200005183826200025a565b5060046200006082826200025a565b50506005805460ff191660ff93909316929092179091555062000326915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000a957600080fd5b81516001600160401b0380821115620000c657620000c662000081565b604051601f8301601f19908116603f01168101908282118183101715620000f157620000f162000081565b816040528381526020925086838588010111156200010e57600080fd5b600091505b8382101562000132578582018301518183018401529082019062000113565b600093810190920192909252949350505050565b6000806000606084860312156200015c57600080fd5b83516001600160401b03808211156200017457600080fd5b620001828783880162000097565b945060208601519150808211156200019957600080fd5b50620001a88682870162000097565b925050604084015160ff81168114620001c057600080fd5b809150509250925092565b600181811c90821680620001e057607f821691505b6020821081036200020157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025557600081815260208120601f850160051c81016020861015620002305750805b601f850160051c820191505b8181101562000251578281556001016200023c565b5050505b505050565b81516001600160401b0381111562000276576200027662000081565b6200028e81620002878454620001cb565b8462000207565b602080601f831160018114620002c65760008415620002ad5750858301515b600019600386901b1c1916600185901b17855562000251565b600085815260208120601f198616915b82811015620002f757888601518255948401946001909101908401620002d6565b5085821015620003165787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61110e80620003366000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806339509351116100975780639883566e116100665780639883566e14610203578063a457c2d714610216578063a9059cbb14610229578063dd62ed3e1461023c57600080fd5b8063395093511461019f57806370a08231146101b257806390dd070a146101e857806395d89b41146101fb57600080fd5b806323b872dd116100d357806323b872dd1461014d5780632929abe6146101605780632e0f262514610175578063313ce5671461019457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610282565b60405161010f9190610dc1565b60405180910390f35b61012b610126366004610e56565b610314565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610e80565b61032e565b61017361016e366004610f08565b610352565b005b6005546101829060ff1681565b60405160ff909116815260200161010f565b60055460ff16610182565b61012b6101ad366004610e56565b61042c565b61013f6101c0366004610f74565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101736101f6366004610e56565b610478565b610102610486565b610173610211366004610e56565b610495565b61012b610224366004610e56565b61049f565b61012b610237366004610e56565b610570565b61013f61024a366004610f96565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461029190610fc9565b80601f01602080910402602001604051908101604052809291908181526020018280546102bd90610fc9565b801561030a5780601f106102df5761010080835404028352916020019161030a565b820191906000526020600020905b8154815290600101906020018083116102ed57829003601f168201915b5050505050905090565b60003361032281858561057e565b60019150505b92915050565b60003361033c858285610732565b610347858585610809565b506001949350505050565b8281146103c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f496e76616c696420696e7075740000000000000000000000000000000000000060448201526064015b60405180910390fd5b60005b83811015610425576104138585838181106103e0576103e061101c565b90506020020160208101906103f59190610f74565b8484848181106104075761040761101c565b90506020020135610abc565b8061041d8161107a565b9150506103c3565b5050505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061032290829086906104739087906110b2565b61057e565b6104828282610bdc565b5050565b60606004805461029190610fc9565b6104828282610abc565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610563576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016103b7565b610347828686840361057e565b600033610322818585610809565b73ffffffffffffffffffffffffffffffffffffffff8316610620576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103b7565b73ffffffffffffffffffffffffffffffffffffffff82166106c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103b7565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461080357818110156107f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103b7565b610803848484840361057e565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166108ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103b7565b73ffffffffffffffffffffffffffffffffffffffff821661094f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103b7565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610a05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103b7565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290610a499084906110b2565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aaf91815260200190565b60405180910390a3610803565b73ffffffffffffffffffffffffffffffffffffffff8216610b39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103b7565b8060026000828254610b4b91906110b2565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054839290610b859084906110b2565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610c7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016103b7565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015610d35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016103b7565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260408120838303905560028054849290610d719084906110c5565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610725565b600060208083528351808285015260005b81811015610dee57858101830151858201604001528201610dd2565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e5157600080fd5b919050565b60008060408385031215610e6957600080fd5b610e7283610e2d565b946020939093013593505050565b600080600060608486031215610e9557600080fd5b610e9e84610e2d565b9250610eac60208501610e2d565b9150604084013590509250925092565b60008083601f840112610ece57600080fd5b50813567ffffffffffffffff811115610ee657600080fd5b6020830191508360208260051b8501011115610f0157600080fd5b9250929050565b60008060008060408587031215610f1e57600080fd5b843567ffffffffffffffff80821115610f3657600080fd5b610f4288838901610ebc565b90965094506020870135915080821115610f5b57600080fd5b50610f6887828801610ebc565b95989497509550505050565b600060208284031215610f8657600080fd5b610f8f82610e2d565b9392505050565b60008060408385031215610fa957600080fd5b610fb283610e2d565b9150610fc060208401610e2d565b90509250929050565b600181811c90821680610fdd57607f821691505b602082108103611016577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110ab576110ab61104b565b5060010190565b808201808211156103285761032861104b565b818103818111156103285761032861104b56fea26469706673582212207ad8f8a01966d9ac899276181bf57d95a2b14c9122191aa5e817335acf3c806464736f6c63430008110033";

type ERC20FreeMintConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20FreeMintConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20FreeMint__factory extends ContractFactory {
  constructor(...args: ERC20FreeMintConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20FreeMint> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      overrides || {}
    ) as Promise<ERC20FreeMint>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      overrides || {}
    );
  }
  override attach(address: string): ERC20FreeMint {
    return super.attach(address) as ERC20FreeMint;
  }
  override connect(signer: Signer): ERC20FreeMint__factory {
    return super.connect(signer) as ERC20FreeMint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20FreeMintInterface {
    return new utils.Interface(_abi) as ERC20FreeMintInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20FreeMint {
    return new Contract(address, _abi, signerOrProvider) as ERC20FreeMint;
  }
}
