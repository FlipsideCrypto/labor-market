/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LaborMarketFactory,
  LaborMarketFactoryInterface,
} from "../../src/LaborMarketFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "LaborMarketCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        internalType: "contract EnforcementCriteriaInterface",
        name: "_criteria",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_auxilaries",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_alphas",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_betas",
        type: "uint256[]",
      },
      {
        internalType: "bytes4[]",
        name: "_sigs",
        type: "bytes4[]",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "deployerAllowed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "required",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "contract IERC1155",
                name: "badge",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "points",
                type: "uint256",
              },
            ],
            internalType: "struct NBadgeAuthInterface.Badge[]",
            name: "badges",
            type: "tuple[]",
          },
        ],
        internalType: "struct NBadgeAuthInterface.Node[]",
        name: "_nodes",
        type: "tuple[]",
      },
    ],
    name: "createLaborMarket",
    outputs: [
      {
        internalType: "address",
        name: "laborMarketAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234610041575b61001a6100156100ec565b608052565b6040516109bd61010b8239608051818181608d015281816107a6015261085701526109bd90f35b610049600080fd5b61000a565b600080fd5b50634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761008b57604052565b610093610053565b604052565b906100ac6100a560405190565b928361006a565b565b90565b6001600160a01b0381160361004e57565b905051906100ac826100b1565b906100ae91602081830312156100c2576100e7600080fd5b6100c2565b6100ae610ac8803803806100ff81610098565b9283398101906100cf56fe60806040526004361015610018575b610016600080fd5b005b60003560e01c80635c60da1b146100405763832d1c420361000e5761003b6102ed565b61000e565b5061003b610076565b600080fd5b600091031261005957565b610061600080fd5b565b6001600160a01b031690565b90565b9052565b50346100cb575b61008836600461004e565b6100c77f00000000000000000000000000000000000000000000000000000000000000005b604051918291826001600160a01b03909116815260200190565b0390f35b6100d3600080fd5b61007d565b6001600160a01b0381165b0361004957565b90503590610061826100d8565b909182601f83011215610133575b602082359267ffffffffffffffff8411610126575b01928284011161005957565b61012e600080fd5b61011a565b61013b600080fd5b610105565b6001600160a01b0381166100e3565b9050359061006182610140565b909182601f8301121561019b575b602082359267ffffffffffffffff841161018e575b01926020830284011161005957565b610196600080fd5b61017f565b6101a3600080fd5b61016a565b91610100838303126102e0575b6101bf82846100ea565b926101e083602083013567ffffffffffffffff81116102d3575b83016100f7565b9290936101f0816040850161014f565b9261021182606083013567ffffffffffffffff81116102b9575b830161015c565b92909361023482608085013567ffffffffffffffff81116102c6575b850161015c565b9290936102568260a083013567ffffffffffffffff81116102b957830161015c565b92909361029b61027c8360c086013567ffffffffffffffff81116102ac575b860161015c565b93909460e08101359067ffffffffffffffff821161029f575b0161015c565b9091565b6102a7600080fd5b610295565b6102b4600080fd5b610275565b6102c1600080fd5b61020a565b6102ce600080fd5b61022d565b6102db600080fd5b6101d9565b6102e8600080fd5b6101b5565b503461031d575b6100c76100ad6103053660046101a8565b9c9b909b9a919a999299989398979497969596610786565b610325600080fd5b6102f4565b61006f90610063906001600160a01b031682565b61006f9061032a565b61006f9061033e565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761038957604052565b610391610350565b604052565b90826000939282370152565b91906103c0816103b9816103ca9560209181520190565b8095610396565b601f01601f191690565b0190565b61007290610347565b9037565b8183526020926103ca919084019384936001600160fb1b038111610403575b029384916103d7565b61040b600080fd5b6103fa565b6001600160e01b031981166100e3565b9050359061006182610410565b5061006f906020810190610420565b818352602090920191906000825b828210610458575050505090565b9091929361048861048160019261046f888661042d565b6001600160e01b031916815260200190565b9560200190565b9392019061044a565b8015156100e3565b9050359061006182610491565b5061006f906020810190610499565b806100e3565b90503590610061826104b5565b5061006f9060208101906104bb565b9035601e19368390030181121561051c575b016020813591019167ffffffffffffffff821161050f575b60a082023603831361005957565b610517600080fd5b610501565b610524600080fd5b6104e9565b5061006f90602081019061014f565b9060806105a7610061936105596105526000830183610529565b85906103ce565b61057061056960208301836104c8565b6020860152565b61058761058060408301836104c8565b6040860152565b61059e61059760608301836104c8565b6060860152565b828101906104c8565b910152565b906103ca8160a093610538565b818352602090920191906000825b8282106105d5575050505090565b909192936105f56105ee6001926105e98890565b6105ac565b9560a00190565b939201906105c7565b61006f91606081019161063f9061061e61061882806104a6565b15158452565b61063561062e60208301836104c8565b6020850152565b60408101906104d7565b9160408185039101526105b9565b9061006f916105fe565b9035605e19368390030181121561066c570190565b6103ca600080fd5b81835291602001908161068a6020830284019490565b92836000925b8484106106a05750505050505090565b90919293949560206106cc6106c583856001950388526106c08b88610657565b61064d565b9860200190565b940194019294939190610690565b9c9a98959361074f9461006f9f9d9993968f61073461072961076b9f9a9661075d9d996107419861071c61010087019360008801906001600160a01b03169052565b85830360208701526103a2565b9460408301906103ce565b60608185039101526103db565b8c810360808e0152916103db565b9189830360a08b01526103db565b9186830360c088015261043c565b9260e0818503910152610674565b506040513d6000823e3d90fd5b9b949c95968c979b949a939b9992999891986107a0600090565b506107ca7f000000000000000000000000000000000000000000000000000000000000000061091f565b9e8f6107d590610347565b6107de90610347565b9c8d3b156108b7575b6040519e8f9d8e9d8e63e1658eb160e01b81526004019d6108079e6106da565b03815a6000948591f180156108aa575b61088c575b507f3c036db17d0d0b5dd4eb57da1cc3bb081ed8e75504d2b5250d42b318071c26c79061085161084b84610347565b91610347565b9061087b7f0000000000000000000000000000000000000000000000000000000000000000610347565b9261088560405190565b600090a490565b6108a490600061089c8183610367565b81019061004e565b3861081c565b6108b2610779565b610817565b6108bf600080fd5b6107e7565b61006361006f61006f9290565b61006f906108c4565b156108e157565b60405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606490fd5b603790604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b815260609190911b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526000f09061006161097661006360006108d1565b6001600160a01b03841614156108da56fea2646970667358221220f83cac5c705f8d01d82318e85039274a7158390f317eef11e417ee65d67e262264736f6c63430008110033";

type LaborMarketFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LaborMarketFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LaborMarketFactory__factory extends ContractFactory {
  constructor(...args: LaborMarketFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _implementation: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LaborMarketFactory> {
    return super.deploy(
      _implementation,
      overrides || {}
    ) as Promise<LaborMarketFactory>;
  }
  override getDeployTransaction(
    _implementation: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_implementation, overrides || {});
  }
  override attach(address: string): LaborMarketFactory {
    return super.attach(address) as LaborMarketFactory;
  }
  override connect(signer: Signer): LaborMarketFactory__factory {
    return super.connect(signer) as LaborMarketFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LaborMarketFactoryInterface {
    return new utils.Interface(_abi) as LaborMarketFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LaborMarketFactory {
    return new Contract(address, _abi, signerOrProvider) as LaborMarketFactory;
  }
}
