/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ScalableEnforcement,
  ScalableEnforcementInterface,
} from "../../../src/enforcement/ScalableEnforcement";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_auxiliaries",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_alphas",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_betas",
        type: "uint256[]",
      },
    ],
    name: "EnforcementConfigured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "intentChange",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "earnings",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainder",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "newSubmission",
        type: "bool",
      },
    ],
    name: "SubmissionReviewed",
    type: "event",
  },
  {
    inputs: [],
    name: "MATH_AVG_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_availableShare",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_enforcer",
        type: "address",
      },
    ],
    name: "enforce",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRemainder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
    ],
    name: "getRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "marketToMaxScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "remainder",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requiresSubmission",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_auxilaries",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_ranges",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_weights",
        type: "uint256[]",
      },
    ],
    name: "setConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761135e908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081630109ab54146100b6575080633e7e366e146100ad57806364bf71ff146100a45780639d10fe351461009b578063bb231e4114610092578063de8db53f14610089578063e2bd00fb146100805763fcc366441461007857600080fd5b61000e610752565b5061000e6106ec565b5061000e610675565b5061000e610637565b5061000e6105c8565b5061000e610456565b5061000e610380565b346103375760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610337576004356024359160443590606435906100fc61033a565b9285853361012a9073ffffffffffffffffffffffffffffffffffffffff166000526002602052604060002090565b6000918252602052604090206000918252600201602052604090209083600383019573ffffffffffffffffffffffffffffffffffffffff169161017d838860019160005201602052604060002054151590565b1561018790610c9d565b3360009081526001602052604090209283548211156101a590610d28565b6101af9088610fde565b503360009081526002602052604090208890600091825260205260409020908454906101da91610a90565b84556002840196875491600101918254906101f491610a75565b8255845461020190610b58565b905461020c91610db3565b8061021685610ea5565b906102209161123a565b908161022b91610b6c565b9384610235610efa565b9061023f9161110d565b5461024990610b58565b9061025391610b6c565b9485151560001460017fadd6277f5dd5b08da7ebd7ded4c856390a25d7794f33307731ed6ad3a92764049861030d986102e3976102d9956102cf9561032d57506102a5926102a091610b6c565b610db3565b965b01958087556102bd816102b8610f33565b61110d565b6102c98c6102b8610f6c565b84610a75565b8089558254610a90565b90556102b8610fa5565b54925460405191829133958360609060019294936080820195848352602083015260408201520152565b0390a46040518061032981906001602060408401938281520152565b0390f35b92505050966102a7565b80fd5b6084359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576103299060043590602435600161040e600092338452600260205284842086855260205260028585200181855260205282858520015495338552600260205285852090855260205260028585200190600052602052604060002090565b015551908152600160208201529081906040820190565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020808501948460051b01011161000e57565b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e576104a7903690600401610425565b909160243581811161000e576104c1903690600401610425565b93909160443590811161000e576104dc903690600401610425565b336000908152600160205260409020919491946104fa8654156107d1565b61050f610507848661088c565b3515156108be565b61051a828814610949565b60005b61052688610a3e565b811015610564578061055a61053f61055f938b8a6108a0565b3561055361054c84610a82565b8c8b6108a0565b3511610a9d565b610a04565b61051d565b5083966105b5838360027f644aa63559522f8f6f8b506611f6d55d82a2ab57ed2d621aa3a46f4b41de5d7e9a61059e896105c39a9b61088c565b3581556105af868c60018401610b7f565b01610b7f565b604051958695339987610c63565b0390a2005b503461000e576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435600033815260028352604081208282528352600160408220015491338252600284526040822090825283526001604082200155604051908152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206040516305f5e1008152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5773ffffffffffffffffffffffffffffffffffffffff6106c261035d565b16600052600260205260406000206024356000526020526020600160406000200154604051908152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5773ffffffffffffffffffffffffffffffffffffffff61073961035d565b1660005260006020526020604060002054604051908152f35b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206001604073ffffffffffffffffffffffffffffffffffffffff6107a561035d565b166000908152600284528181206024358252845260028282200160443582528452200154604051908152f35b156107d857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f5363616c61626c65456e666f7263656d656e743a3a7365744275636b6574733a60448201527f20437269746572696120616c726561647920696e2075736500000000000000006064820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90156108955790565b61089d61085c565b90565b91908110156108b1575b60051b0190565b6108b961085c565b6108aa565b156108c557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f5363616c61626c65456e666f7263656d656e743a3a7365744275636b6574733a60448201527f204d61782073636f7265206e6f742073657400000000000000000000000000006064820152fd5b1561095057565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f5363616c61626c65456e666f7263656d656e743a3a7365744275636b6574733a60448201527f20496e76616c696420696e7075740000000000000000000000000000000000006064820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a32570190565b610a3a6109d4565b0190565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201918211610a6b57565b610a736109d4565b565b91908203918211610a6b57565b9060018201809211610a6b57565b91908201809211610a6b57565b15610aa457565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5363616c61626c65456e666f7263656d656e743a3a7365744275636b6574733a60448201527f204275636b657473206e6f742073657175656e7469616c0000000000000000006064820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b906305f5e1009180830292830403610a6b57565b81810292918115918404141715610a6b57565b9067ffffffffffffffff8311610c19575b680100000000000000008311610c0c575b8154838355808410610be3575b50610bbf9091600052602060002090565b60005b838110610bcf5750505050565b600190602084359401938184015501610bc2565b6000838152846020822092830192015b828110610c01575050610bae565b818155600101610bf3565b610c14610b28565b610ba1565b610c21610b28565b610b90565b90918281527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831161000e5760209260051b809284830137010190565b94929093610c8161089d9795610c8f94606089526060890191610c26565b918683036020880152610c26565b926040818503910152610c26565b15610ca457565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f5363616c61626c65456e666f7263656d656e743a3a7265766965773a20456e6660448201527f6f7263657220616c7265616479207375626d69742061207265766965770000006064820152fd5b15610d2f57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5363616c61626c65456e666f7263656d656e743a3a7265766965773a20496e7660448201527f616c69642073636f7265000000000000000000000000000000000000000000006064820152fd5b8115610dbd570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6040810190811067ffffffffffffffff821117610e0857604052565b610e10610b28565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610e0857604052565b9060405191828154918282526020928383019160005283600020936000905b828210610e8b57505050610a7392500383610e15565b855484526001958601958895509381019390910190610e75565b906040516060810181811067ffffffffffffffff821117610eed575b6040526040610ee86002839580548552610edd60018201610e56565b602086015201610e56565b910152565b610ef5610b28565b610ec1565b60405190610f0782610dec565b600d82527f5363616c656420617667202573000000000000000000000000000000000000006020830152565b60405190610f4082610dec565b600c82527f4561726e696e67733a20257300000000000000000000000000000000000000006020830152565b60405190610f7982610dec565b601182527f7375626d697373696f6e2069643a2025730000000000000000000000000000006020830152565b60405190610fb282610dec565b601282527f417661696c61626c6520536861726520257300000000000000000000000000006020830152565b60008281526001820160205260409020546110535780826001925468010000000000000000811015611046575b838101808455811015611039575b826000526020600020015580549260005201602052604060002055600190565b61104161085c565b611019565b61104e610b28565b61100b565b5050600090565b9060405160207fb60e72cc00000000000000000000000000000000000000000000000000000000818301526040602483015283519384606484015260005b8581106110f9575050506110f46084827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f87600085610a73999a860101526305f5e100604485015201168101036064810184520182610e15565b6111bb565b818101830151848201608401528201611098565b9190604051906020907fb60e72cc00000000000000000000000000000000000000000000000000000000828401526040602484015284519182606485015260005b8381106111a7575050610a73939450827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f846084946000866110f49887010152604485015201168101036064810184520182610e15565b86810182015185820160840152810161114e565b600080916020815191016a636f6e736f6c652e6c6f675afa50565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff908015610a32570190565b602090805115611210570190565b610a3a61085c565b602091815181101561122d575b60051b010190565b61123561085c565b611225565b602081019081515192831561131f5760409392939261128d82855161125e81610dec565b601281527f53636f726520746f206275636b65742025730000000000000000000000000000602082015261110d565b806112cb855161129c81610dec565b601481527f6d6174682061766720646563696d616c73202573000000000000000000000000602082015261105a565b6112e15750506112dd92500151611202565b5190565b6112f585516112ef83610a3e565b90611218565b51821161130b57611305906111d6565b806112cb565b9290506112dd93506112ef91015191610a3e565b5050505060019056fea2646970667358221220f93da210fac25592371db6ffb6cf325ee234eb7f191d0a03ede563873908516164736f6c63430008110033";

type ScalableEnforcementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScalableEnforcementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScalableEnforcement__factory extends ContractFactory {
  constructor(...args: ScalableEnforcementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ScalableEnforcement> {
    return super.deploy(overrides || {}) as Promise<ScalableEnforcement>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ScalableEnforcement {
    return super.attach(address) as ScalableEnforcement;
  }
  override connect(signer: Signer): ScalableEnforcement__factory {
    return super.connect(signer) as ScalableEnforcement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScalableEnforcementInterface {
    return new utils.Interface(_abi) as ScalableEnforcementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScalableEnforcement {
    return new Contract(address, _abi, signerOrProvider) as ScalableEnforcement;
  }
}
