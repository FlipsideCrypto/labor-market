/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ScalableEnforcement,
  ScalableEnforcementInterface,
} from "../../../src/enforcement/ScalableEnforcement";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_auxiliaries",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_alphas",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_betas",
        type: "uint256[]",
      },
    ],
    name: "EnforcementConfigured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "intentChange",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "earnings",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainder",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "newSubmission",
        type: "bool",
      },
    ],
    name: "SubmissionReviewed",
    type: "event",
  },
  {
    inputs: [],
    name: "MATH_AVG_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_availableShare",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_enforcer",
        type: "address",
      },
    ],
    name: "enforce",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRemainder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
    ],
    name: "getRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "marketToMaxScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "remainder",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requiresSubmission",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_auxilaries",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_ranges",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_weights",
        type: "uint256[]",
      },
    ],
    name: "setConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611491908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c80630109ab54146100b35780633e7e366e146100aa57806364bf71ff146100a15780639d10fe3514610098578063bb231e411461008f578063de8db53f14610086578063e2bd00fb1461007d5763fcc366441461007557600080fd5b61000e610780565b5061000e61071a565b5061000e6106a3565b5061000e610665565b5061000e6105f6565b5061000e610484565b5061000e6103ae565b3461000e5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576024356004356064356044356100f6610368565b918484336101249073ffffffffffffffffffffffffffffffffffffffff166000526002602052604060002090565b60009182526020526040902060009182526002016020526040902091600383019373ffffffffffffffffffffffffffffffffffffffff16610175818660019160005201602052604060002054151590565b1561017f90610ce4565b33600090815260016020526040902090815483111561019d90610d6f565b6101a79086611109565b503360009081526002602052604090208690600091825260205260409020918454906101d291610abe565b84556002840194855492600101928354906101ec91610aa3565b835584546101f990610b86565b905461020491610dfa565b8061020e83610eec565b9061021891611365565b9181610222610f41565b9061022c91611238565b82610235610f7a565b9061023f91611238565b5480610249610fb3565b9061025391611238565b61025d9085610dfa565b9061026791610bb3565b9081610271610fec565b9061027b91611238565b61028491610bb3565b6305f5e10090049283610295611025565b9061029f91611238565b60010192808455806102af61105e565b906102b991611238565b866102c2611097565b906102cc91611238565b6102d69083610aa3565b8085558154906102e591610abe565b90556102ef6110d0565b906102f991611238565b5490549060405180913393610327918360609060019294936080820195848352602083015260408201520152565b037fadd6277f5dd5b08da7ebd7ded4c856390a25d7794f33307731ed6ad3a927640491a46040518061036481906001602060408401938281520152565b0390f35b6084359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576103649060043590602435600161043c600092338452600260205284842086855260205260028585200181855260205282858520015495338552600260205285852090855260205260028585200190600052602052604060002090565b015551908152600160208201529081906040820190565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020808501948460051b01011161000e57565b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e576104d5903690600401610453565b909160243581811161000e576104ef903690600401610453565b93909160443590811161000e5761050a903690600401610453565b336000908152600160205260409020919491946105288654156107ff565b61053d61053584866108ba565b3515156108ec565b610548828814610977565b60005b61055488610a6c565b811015610592578061058861056d61058d938b8a6108ce565b3561058161057a84610ab0565b8c8b6108ce565b3511610acb565b610a32565b61054b565b5083966105e3838360027f644aa63559522f8f6f8b506611f6d55d82a2ab57ed2d621aa3a46f4b41de5d7e9a6105cc896105f19a9b6108ba565b3581556105dd868c60018401610bc6565b01610bc6565b604051958695339987610caa565b0390a2005b503461000e576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435600033815260028352604081208282528352600160408220015491338252600284526040822090825283526001604082200155604051908152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206040516305f5e1008152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5773ffffffffffffffffffffffffffffffffffffffff6106f061038b565b16600052600260205260406000206024356000526020526020600160406000200154604051908152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5773ffffffffffffffffffffffffffffffffffffffff61076761038b565b1660005260006020526020604060002054604051908152f35b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206001604073ffffffffffffffffffffffffffffffffffffffff6107d361038b565b166000908152600284528181206024358252845260028282200160443582528452200154604051908152f35b1561080657565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f5363616c61626c65456e666f7263656d656e743a3a7365744275636b6574733a60448201527f20437269746572696120616c726561647920696e2075736500000000000000006064820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90156108c35790565b6108cb61088a565b90565b91908110156108df575b60051b0190565b6108e761088a565b6108d8565b156108f357565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f5363616c61626c65456e666f7263656d656e743a3a7365744275636b6574733a60448201527f204d61782073636f7265206e6f742073657400000000000000000000000000006064820152fd5b1561097e57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f5363616c61626c65456e666f7263656d656e743a3a7365744275636b6574733a60448201527f20496e76616c696420696e7075740000000000000000000000000000000000006064820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a60570190565b610a68610a02565b0190565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201918211610a9957565b610aa1610a02565b565b91908203918211610a9957565b9060018201809211610a9957565b91908201809211610a9957565b15610ad257565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5363616c61626c65456e666f7263656d656e743a3a7365744275636b6574733a60448201527f204275636b657473206e6f742073657175656e7469616c0000000000000000006064820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b906305f5e1009180830292830403610a9957565b906305f5e10091828102928184041490151715610a9957565b81810292918115918404141715610a9957565b9067ffffffffffffffff8311610c60575b680100000000000000008311610c53575b8154838355808410610c2a575b50610c069091600052602060002090565b60005b838110610c165750505050565b600190602084359401938184015501610c09565b6000838152846020822092830192015b828110610c48575050610bf5565b818155600101610c3a565b610c5b610b56565b610be8565b610c68610b56565b610bd7565b90918281527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831161000e5760209260051b809284830137010190565b94929093610cc86108cb9795610cd694606089526060890191610c6d565b918683036020880152610c6d565b926040818503910152610c6d565b15610ceb57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f5363616c61626c65456e666f7263656d656e743a3a7265766965773a20456e6660448201527f6f7263657220616c7265616479207375626d69742061207265766965770000006064820152fd5b15610d7657565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5363616c61626c65456e666f7263656d656e743a3a7265766965773a20496e7660448201527f616c69642073636f7265000000000000000000000000000000000000000000006064820152fd5b8115610e04570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6040810190811067ffffffffffffffff821117610e4f57604052565b610e57610b56565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610e4f57604052565b9060405191828154918282526020928383019160005283600020936000905b828210610ed257505050610aa192500383610e5c565b855484526001958601958895509381019390910190610ebc565b906040516060810181811067ffffffffffffffff821117610f34575b6040526040610f2f6002839580548552610f2460018201610e9d565b602086015201610e9d565b910152565b610f3c610b56565b610f08565b60405190610f4e82610e33565b601982527f41766572616765207769746820446563696d616c733a202573000000000000006020830152565b60405190610f8782610e33565b601182527f4275636b6574205765696768743a2025730000000000000000000000000000006020830152565b60405190610fc082610e33565b601482527f4275636b6574206d61782073636f72653a2025730000000000000000000000006020830152565b60405190610ff982610e33565b601782527f556e7765696768746564204561726e696e67733a2025730000000000000000006020830152565b6040519061103282610e33565b600f82527f5363616c656420446f776e3a20257300000000000000000000000000000000006020830152565b6040519061106b82610e33565b600c82527f4561726e696e67733a20257300000000000000000000000000000000000000006020830152565b604051906110a482610e33565b601182527f7375626d697373696f6e2069643a2025730000000000000000000000000000006020830152565b604051906110dd82610e33565b601282527f417661696c61626c6520536861726520257300000000000000000000000000006020830152565b600082815260018201602052604090205461117e5780826001925468010000000000000000811015611171575b838101808455811015611164575b826000526020600020015580549260005201602052604060002055600190565b61116c61088a565b611144565b611179610b56565b611136565b5050600090565b9060405160207fb60e72cc00000000000000000000000000000000000000000000000000000000818301526040602483015283519384606484015260005b8581106112245750505061121f6084827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f87600085610aa1999a860101526305f5e100604485015201168101036064810184520182610e5c565b6112e6565b8181018301518482016084015282016111c3565b9190604051906020907fb60e72cc00000000000000000000000000000000000000000000000000000000828401526040602484015284519182606485015260005b8381106112d2575050610aa1939450827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460849460008661121f9887010152604485015201168101036064810184520182610e5c565b868101820151858201608401528101611279565b600080916020815191016a636f6e736f6c652e6c6f675afa50565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff908015610a60570190565b60209080511561133b570190565b610a6861088a565b6020918151811015611358575b60051b010190565b61136061088a565b611350565b6020810190815151928315611452576040939293926113b882855161138981610e33565b601281527f53636f726520746f206275636b657420257300000000000000000000000000006020820152611238565b806113f685516113c781610e33565b601481527f6d6174682061766720646563696d616c732025730000000000000000000000006020820152611185565b61140c5750506114089250015161132d565b5190565b611429611423865161141d84610a6c565b90611343565b51610b9a565b821161143e5761143890611301565b806113f6565b929050611408935061141d91015191610a6c565b5050505060019056fea2646970667358221220e2f146d1b51aec03d3159d744a4c3eb92c627c96d36ad649b981a70190bf000064736f6c63430008110033";

type ScalableEnforcementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScalableEnforcementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScalableEnforcement__factory extends ContractFactory {
  constructor(...args: ScalableEnforcementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ScalableEnforcement> {
    return super.deploy(overrides || {}) as Promise<ScalableEnforcement>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ScalableEnforcement {
    return super.attach(address) as ScalableEnforcement;
  }
  override connect(signer: Signer): ScalableEnforcement__factory {
    return super.connect(signer) as ScalableEnforcement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScalableEnforcementInterface {
    return new utils.Interface(_abi) as ScalableEnforcementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScalableEnforcement {
    return new Contract(address, _abi, signerOrProvider) as ScalableEnforcement;
  }
}
