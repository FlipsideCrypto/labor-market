/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ScalableEnforcement,
  ScalableEnforcementInterface,
} from "../../../src/enforcement/ScalableEnforcement";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_auxiliaries",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_alphas",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_betas",
        type: "uint256[]",
      },
    ],
    name: "EnforcementConfigured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "intentChange",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "earnings",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainder",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "newSubmission",
        type: "bool",
      },
    ],
    name: "SubmissionReviewed",
    type: "event",
  },
  {
    inputs: [],
    name: "MATH_AVG_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_availableShare",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_enforcer",
        type: "address",
      },
    ],
    name: "enforce",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRemainder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
    ],
    name: "getRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "marketToMaxScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "remainder",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requiresSubmission",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_auxilaries",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_ranges",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_weights",
        type: "uint256[]",
      },
    ],
    name: "setConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611312908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081630109ab54146100b6575080633e7e366e146100ad57806364bf71ff146100a45780639d10fe351461009b578063bb231e4114610092578063de8db53f14610089578063e2bd00fb146100805763fcc366441461007857600080fd5b61000e61073f565b5061000e6106d9565b5061000e610662565b5061000e610624565b5061000e6105b5565b5061000e610443565b5061000e61036d565b346103245760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610324576004356024359160443590606435906100fc610327565b9285853361012a9073ffffffffffffffffffffffffffffffffffffffff166000526002602052604060002090565b6000918252602052604090206000918252600201602052604090209083600383019573ffffffffffffffffffffffffffffffffffffffff169161017d838860019160005201602052604060002054151590565b1561018790610c8a565b3360009081526001602052604090209283548211156101a590610d15565b6101af9088610f92565b503360009081526002602052604090208890600091825260205260409020908454906101da91610a7d565b84556002840196875491600101918254906101f491610a62565b8255845461020190610b45565b905461020c91610da0565b8061021685610e92565b90610220916111ee565b908161022b91610b59565b935461023690610b45565b9061024091610b59565b9485151560001460017fadd6277f5dd5b08da7ebd7ded4c856390a25d7794f33307731ed6ad3a9276404986102fa986102d0976102c6956102bc9561031a57506102929261028d91610b59565b610da0565b965b01958087556102aa816102a5610ee7565b6110c1565b6102b68c6102a5610f20565b84610a62565b8089558254610a7d565b90556102a5610f59565b54925460405191829133958360609060019294936080820195848352602083015260408201520152565b0390a46040518061031681906001602060408401938281520152565b0390f35b9250505096610294565b80fd5b6084359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57610316906004359060243560016103fb600092338452600260205284842086855260205260028585200181855260205282858520015495338552600260205285852090855260205260028585200190600052602052604060002090565b015551908152600160208201529081906040820190565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020808501948460051b01011161000e57565b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e57610494903690600401610412565b909160243581811161000e576104ae903690600401610412565b93909160443590811161000e576104c9903690600401610412565b336000908152600160205260409020919491946104e78654156107be565b6104fc6104f48486610879565b3515156108ab565b610507828814610936565b60005b61051388610a2b565b811015610551578061054761052c61054c938b8a61088d565b3561054061053984610a6f565b8c8b61088d565b3511610a8a565b6109f1565b61050a565b5083966105a2838360027f644aa63559522f8f6f8b506611f6d55d82a2ab57ed2d621aa3a46f4b41de5d7e9a61058b896105b09a9b610879565b35815561059c868c60018401610b6c565b01610b6c565b604051958695339987610c50565b0390a2005b503461000e576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435600033815260028352604081208282528352600160408220015491338252600284526040822090825283526001604082200155604051908152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206040516305f5e1008152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5773ffffffffffffffffffffffffffffffffffffffff6106af61034a565b16600052600260205260406000206024356000526020526020600160406000200154604051908152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5773ffffffffffffffffffffffffffffffffffffffff61072661034a565b1660005260006020526020604060002054604051908152f35b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206001604073ffffffffffffffffffffffffffffffffffffffff61079261034a565b166000908152600284528181206024358252845260028282200160443582528452200154604051908152f35b156107c557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f5363616c61626c65456e666f7263656d656e743a3a7365744275636b6574733a60448201527f20437269746572696120616c726561647920696e2075736500000000000000006064820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90156108825790565b61088a610849565b90565b919081101561089e575b60051b0190565b6108a6610849565b610897565b156108b257565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f5363616c61626c65456e666f7263656d656e743a3a7365744275636b6574733a60448201527f204d61782073636f7265206e6f742073657400000000000000000000000000006064820152fd5b1561093d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f5363616c61626c65456e666f7263656d656e743a3a7365744275636b6574733a60448201527f20496e76616c696420696e7075740000000000000000000000000000000000006064820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a1f570190565b610a276109c1565b0190565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201918211610a5857565b610a606109c1565b565b91908203918211610a5857565b9060018201809211610a5857565b91908201809211610a5857565b15610a9157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5363616c61626c65456e666f7263656d656e743a3a7365744275636b6574733a60448201527f204275636b657473206e6f742073657175656e7469616c0000000000000000006064820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b906305f5e1009180830292830403610a5857565b81810292918115918404141715610a5857565b9067ffffffffffffffff8311610c06575b680100000000000000008311610bf9575b8154838355808410610bd0575b50610bac9091600052602060002090565b60005b838110610bbc5750505050565b600190602084359401938184015501610baf565b6000838152846020822092830192015b828110610bee575050610b9b565b818155600101610be0565b610c01610b15565b610b8e565b610c0e610b15565b610b7d565b90918281527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831161000e5760209260051b809284830137010190565b94929093610c6e61088a9795610c7c94606089526060890191610c13565b918683036020880152610c13565b926040818503910152610c13565b15610c9157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f5363616c61626c65456e666f7263656d656e743a3a7265766965773a20456e6660448201527f6f7263657220616c7265616479207375626d69742061207265766965770000006064820152fd5b15610d1c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5363616c61626c65456e666f7263656d656e743a3a7265766965773a20496e7660448201527f616c69642073636f7265000000000000000000000000000000000000000000006064820152fd5b8115610daa570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6040810190811067ffffffffffffffff821117610df557604052565b610dfd610b15565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610df557604052565b9060405191828154918282526020928383019160005283600020936000905b828210610e7857505050610a6092500383610e02565b855484526001958601958895509381019390910190610e62565b906040516060810181811067ffffffffffffffff821117610eda575b6040526040610ed56002839580548552610eca60018201610e43565b602086015201610e43565b910152565b610ee2610b15565b610eae565b60405190610ef482610dd9565b600c82527f4561726e696e67733a20257300000000000000000000000000000000000000006020830152565b60405190610f2d82610dd9565b601182527f7375626d697373696f6e2069643a2025730000000000000000000000000000006020830152565b60405190610f6682610dd9565b601282527f417661696c61626c6520536861726520257300000000000000000000000000006020830152565b60008281526001820160205260409020546110075780826001925468010000000000000000811015610ffa575b838101808455811015610fed575b826000526020600020015580549260005201602052604060002055600190565b610ff5610849565b610fcd565b611002610b15565b610fbf565b5050600090565b9060405160207fb60e72cc00000000000000000000000000000000000000000000000000000000818301526040602483015283519384606484015260005b8581106110ad575050506110a86084827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f87600085610a60999a860101526305f5e100604485015201168101036064810184520182610e02565b61116f565b81810183015184820160840152820161104c565b9190604051906020907fb60e72cc00000000000000000000000000000000000000000000000000000000828401526040602484015284519182606485015260005b83811061115b575050610a60939450827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f846084946000866110a89887010152604485015201168101036064810184520182610e02565b868101820151858201608401528101611102565b600080916020815191016a636f6e736f6c652e6c6f675afa50565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff908015610a1f570190565b6020908051156111c4570190565b610a27610849565b60209181518110156111e1575b60051b010190565b6111e9610849565b6111d9565b60208101908151519283156112d35760409392939261124182855161121281610dd9565b601281527f53636f726520746f206275636b6574202573000000000000000000000000000060208201526110c1565b8061127f855161125081610dd9565b601481527f6d6174682061766720646563696d616c73202573000000000000000000000000602082015261100e565b611295575050611291925001516111b6565b5190565b6112a985516112a383610a2b565b906111cc565b5182116112bf576112b99061118a565b8061127f565b92905061129193506112a391015191610a2b565b5050505060019056fea2646970667358221220840058dd39d609d50c3b272754299b1c3801b2c872a8c9e16ed7f2f1642b1bb364736f6c63430008110033";

type ScalableEnforcementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScalableEnforcementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScalableEnforcement__factory extends ContractFactory {
  constructor(...args: ScalableEnforcementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ScalableEnforcement> {
    return super.deploy(overrides || {}) as Promise<ScalableEnforcement>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ScalableEnforcement {
    return super.attach(address) as ScalableEnforcement;
  }
  override connect(signer: Signer): ScalableEnforcement__factory {
    return super.connect(signer) as ScalableEnforcement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScalableEnforcementInterface {
    return new utils.Interface(_abi) as ScalableEnforcementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScalableEnforcement {
    return new Contract(address, _abi, signerOrProvider) as ScalableEnforcement;
  }
}
