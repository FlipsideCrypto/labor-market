/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ScalableLikertEnforcement,
  ScalableLikertEnforcementInterface,
} from "../../../src/enforcement/ScalableLikertEnforcement";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_auxiliaries",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_alphas",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_betas",
        type: "uint256[]",
      },
    ],
    name: "EnforcementConfigured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "intentChange",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "earnings",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainder",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "newSubmission",
        type: "bool",
      },
    ],
    name: "SubmissionReviewed",
    type: "event",
  },
  {
    inputs: [],
    name: "MATH_AVG_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_availableShare",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_enforcer",
        type: "address",
      },
    ],
    name: "enforce",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRemainder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
    ],
    name: "getRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "marketToMaxScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "remainder",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requiresSubmission",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_auxilaries",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_ranges",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_weights",
        type: "uint256[]",
      },
    ],
    name: "setConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611112908161001c8239f35b600080fdfe6040610120815260048036101561001557600080fd5b600090608060e0528160e05152813560e01c9182630109ab54146109cd575081633e7e366e1461092d57816364bf71ff146102b85781639d10fe351461023d57508063bb231e41146101f8578063de8db53f1461017f578063e2bd00fb146101185763fcc366441461008657600080fd5b346101115760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101115760209073ffffffffffffffffffffffffffffffffffffffff6100d5610d5f565b1660e05151526002825260e05151818120906024359052825260e05151600282822001906044359052825260018160e051512001549051908152f35b60e0515180fd5b50346101115760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101115760209073ffffffffffffffffffffffffffffffffffffffff610168610d5f565b1660e05151528060e0515180845220549051908152f35b503461011157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101115760209073ffffffffffffffffffffffffffffffffffffffff6101ce610d5f565b1660e05151526002825260e05151818120906024359052825260018160e051512001549051908152f35b50346101115760e0515190817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023957602090516305f5e1008152f35b5080fd5b823461011157602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101115735903360e05151526002835260e05151828282209152835260e051519160018284200154923390526002845260e05151908282209152835260e051516001828220015551908152f35b9050346101115760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101115767ffffffffffffffff908035828111610111576103099036908301610d87565b6024948535858111610111576103229036908601610d87565b9060449384358881116101115761033c9036908901610d87565b6101005260c0523360e051515260a0956020875260016020528460e05151209889546108ac57821561087b578135998a156107f9576101005186036107775760e051515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8701878111610746578110156104ee576103bc818888610db8565b35600182018083116104bd576103d3908989610db8565b35111561043a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461040957600101610380565b8c60118c7f4e487b710000000000000000000000000000000000000000000000000000000060e05151525260e05151fd5b505085517f08c379a00000000000000000000000000000000000000000000000000000000081528851818b0152603d818d01527f5363616c61626c654c696b657274456e666f7263656d656e743a3a7365744275818901527f636b6574733a204275636b657473206e6f742073657175656e7469616c0000006064820152608490fd5b8e60118e7f4e487b710000000000000000000000000000000000000000000000000000000060e05151525260e05151fd5b5093889286928d8c8a988f8155600181018488116107155768010000000000000000918289116106e4578154898355808a106106b4575b50879160e0515152895160e0515192818420845b8c81106106a25750505050600201946101005111610674575061010051116106445750508054610100518255806101005110610612575b5060c0519060e051515284519060e05151828120905b61010051811061060057897f644aa63559522f8f6f8b506611f6d55d82a2ab57ed2d621aa3a46f4b41de5d7e8a6105dc8b8b8b6105ce8c885196606088526060880191610e53565b928584039051860152610e53565b9281840390820152806105f633946101005160c051610e53565b0390a260e0515180f35b82358282015591830191600101610586565b8160e0515152855160e051519081209182019161010051015b828110610639575050610570565b81815560010161062b565b6041907f4e487b710000000000000000000000000000000000000000000000000000000060e05151525260e05151fd5b6041837f4e487b71000000000000000000000000000000000000000000000000000000008693525260e05151fd5b82358282015591830191600101610539565b8260e05151528a5160e05151908120918b83015b81840181106106d957505050610525565b8281556001016106c8565b846041857f4e487b710000000000000000000000000000000000000000000000000000000060e05151525260e05151fd5b836041847f4e487b710000000000000000000000000000000000000000000000000000000060e05151525260e05151fd5b8d60118d7f4e487b710000000000000000000000000000000000000000000000000000000060e05151525260e05151fd5b5085517f08c379a00000000000000000000000000000000000000000000000000000000081528851818b01526034818d01527f5363616c61626c654c696b657274456e666f7263656d656e743a3a7365744275818901527f636b6574733a20496e76616c696420696e7075740000000000000000000000006064820152608490fd5b5085517f08c379a00000000000000000000000000000000000000000000000000000000081528851818b01526038818d01527f5363616c61626c654c696b657274456e666f7263656d656e743a3a7365744275818901527f636b6574733a204d61782073636f7265206e6f742073657400000000000000006064820152608490fd5b8a60328a7f4e487b710000000000000000000000000000000000000000000000000000000060e05151525260e05151fd5b85517f08c379a00000000000000000000000000000000000000000000000000000000081528851818b0152603e818d01527f5363616c61626c654c696b657274456e666f7263656d656e743a3a7365744275818901527f636b6574733a20437269746572696120616c726561647920696e2075736500006064820152608490fd5b90503461011157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610111573560016024353360e05151526020906002825260e05151848682209152825260e05151816002878320019152825260e0515193838686200154943390526002835260e05151908682209152825260e05151906002868320019152815260e051518285822001558351928352820152f35b9150346102395760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023957803560243590604435926064356084359473ffffffffffffffffffffffffffffffffffffffff8616809603610d5b573387528760209760028952818120868252895260028282200187825289522060038101610a6a888260019160005201602052604060002054151590565b610cb3573360e0515152600197888a528a60e05151209081548511610c3157610a939083610f7c565b503360e051515260028a5260e05151878c822091528a52610abb8b60e0515120948454610e33565b83556002830195610ad28a88549601958654610df7565b855583546305f5e100938185029185830403610bff5754610af291610e90565b918c5191606083019083821067ffffffffffffffff831117610bcd5750610b67888f968f8f9697610b5b81610b819c9a8c610b526002610b779f9c610b61988f9d610b6c9f52610b4882549e8f88528301610ec9565b9086015201610ec9565b90820152610ff2565b90610e40565b04610e40565b610e90565b910194818655610df7565b8085558254610e33565b905554905486519185835286830152868201528360608201527fadd6277f5dd5b08da7ebd7ded4c856390a25d7794f33307731ed6ad3a9276404339160e05190a4825191818352820152f35b6041907f4e487b710000000000000000000000000000000000000000000000000000000060e051515252602460e05151fd5b6011837f4e487b710000000000000000000000000000000000000000000000000000000060e051515252602460e05151fd5b6084878c8e51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152603060248201527f5363616c61626c654c696b657274456e666f7263656d656e743a3a726576696560448201527f773a20496e76616c69642073636f7265000000000000000000000000000000006064820152fd5b60a4858a8c51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152604360248201527f5363616c61626c654c696b657274456e666f7263656d656e743a3a726576696560448201527f773a20456e666f7263657220616c7265616479207375626d697420612072657660648201527f69657700000000000000000000000000000000000000000000000000000000006084820152fd5b8680fd5b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610d8257565b600080fd5b9181601f84011215610d825782359167ffffffffffffffff8311610d82576020808501948460051b010111610d8257565b9190811015610dc85760051b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91908203918211610e0457565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91908201809211610e0457565b81810292918115918404141715610e0457565b90918281527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311610d825760209260051b809284830137010190565b8115610e9a570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b90604051918281548082526020908183019360005281600020916000905b828210610f6257505050509003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820167ffffffffffffffff811183821017610f3357604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b835486529485019487945060019384019390910190610ee7565b6000828152600182016020526040902054610fd75780549068010000000000000000821015610f335760018201808255821015610dc85782600192826000526020600020015580549260005201602052604060002055600190565b5050600090565b8051821015610dc85760209160051b010190565b6020810180515193929084156110d35793805b61102057505060409192500151805115610dc8576020015190565b84517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82019082821161108d578161105791610fde565b5183116110bb5750801561108d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0180611005565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b9290506110cf939450604091500151610fde565b5190565b5060019350505056fea264697066735822122012ee24e6a0916f03857f3c7b76edc1310b225e6785c0969429ac061362863f6564736f6c63430008110033";

type ScalableLikertEnforcementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScalableLikertEnforcementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScalableLikertEnforcement__factory extends ContractFactory {
  constructor(...args: ScalableLikertEnforcementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ScalableLikertEnforcement> {
    return super.deploy(overrides || {}) as Promise<ScalableLikertEnforcement>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ScalableLikertEnforcement {
    return super.attach(address) as ScalableLikertEnforcement;
  }
  override connect(signer: Signer): ScalableLikertEnforcement__factory {
    return super.connect(signer) as ScalableLikertEnforcement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScalableLikertEnforcementInterface {
    return new utils.Interface(_abi) as ScalableLikertEnforcementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScalableLikertEnforcement {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ScalableLikertEnforcement;
  }
}
