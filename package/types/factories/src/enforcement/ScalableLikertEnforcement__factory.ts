/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ScalableLikertEnforcement,
  ScalableLikertEnforcementInterface,
} from "../../../src/enforcement/ScalableLikertEnforcement";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_auxiliaries",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_alphas",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_betas",
        type: "uint256[]",
      },
    ],
    name: "EnforcementConfigured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "intentChange",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "earnings",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainder",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "newSubmission",
        type: "bool",
      },
    ],
    name: "SubmissionReviewed",
    type: "event",
  },
  {
    inputs: [],
    name: "MATH_AVG_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_availableShare",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_enforcer",
        type: "address",
      },
    ],
    name: "enforce",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRemainder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
    ],
    name: "getRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "marketToMaxScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "remainder",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_submissionId",
        type: "uint256",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "requiresSubmission",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_auxilaries",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_ranges",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_weights",
        type: "uint256[]",
      },
    ],
    name: "setConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f30806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063bb231e411161005b578063bb231e411461013f578063de8db53f1461014a578063e2bd00fb1461015d578063fcc366441461017d57600080fd5b80630109ab541461008d5780633e7e366e146100c057806364bf71ff146100e85780639d10fe35146100fd575b600080fd5b6100a061009b366004610b48565b6101cf565b60408051921515835262ffffff9091166020830152015b60405180910390f35b6100d36100ce366004610b91565b610584565b604080519283529015156020830152016100b7565b6100fb6100f6366004610bf8565b6105ba565b005b61013161010b366004610c92565b336000908152600260209081526040808320938352929052908120600101805491905590565b6040519081526020016100b7565b6101316305f5e10081565b610131610158366004610cab565b61091e565b61013161016b366004610cd5565b60006020819052908152604090205481565b61013161018b366004610cf0565b73ffffffffffffffffffffffffffffffffffffffff929092166000908152600260208181526040808420948452938152838320948352930190925290206001015490565b3360009081526002602081815260408084208985528252808420888552909201905281208190610202600382018561095c565b156102ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f5363616c61626c654c696b657274456e666f7263656d656e743a3a726576696560448201527f773a20456e666f7263657220616c7265616479207375626d697420612072657660648201527f6965770000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b336000908152600160205260409020805487111561035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f5363616c61626c654c696b657274456e666f7263656d656e743a3a726576696560448201527f773a20496e76616c69642073636f72650000000000000000000000000000000060648201526084016102b1565b610367600383018661098b565b503360009081526002602090815260408083208c84529091528120835490918991859190610396908490610d52565b909155505060028301546001820180546000906103b4908490610d65565b90915550600090506103c8600385016109ad565b84546103d8906305f5e100610d78565b6103e29190610d8f565b905060006305f5e1006104ba85604051806060016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561045357602002820191906000526020600020905b81548152602001906001019080831161043f575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156104ab57602002820191906000526020600020905b815481526020019060010190808311610497575b505050505081525050846109b7565b6104c49084610d78565b6104ce9190610d8f565b84549091506104dd8a83610d78565b6104e79190610d8f565b600186018190556104f8908a610d65565b60028601819055600184018054600090610513908490610d52565b9091555050600185810154600287015460408051848152602081019390935282015260608101919091528b908d9033907fadd6277f5dd5b08da7ebd7ded4c856390a25d7794f33307731ed6ad3a92764049060800160405180910390a45060019b8c9b509950505050505050505050565b336000908152600260208181526040808420868552825280842085855290920190528120600190810180549290555b9250929050565b336000908152600160205260409020805415610658576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5363616c61626c654c696b657274456e666f7263656d656e743a3a736574427560448201527f636b6574733a20437269746572696120616c726561647920696e20757365000060648201526084016102b1565b8686600081811061066b5761066b610dca565b90506020020135600003610701576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f5363616c61626c654c696b657274456e666f7263656d656e743a3a736574427560448201527f636b6574733a204d61782073636f7265206e6f7420736574000000000000000060648201526084016102b1565b838214610790576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f5363616c61626c654c696b657274456e666f7263656d656e743a3a736574427560448201527f636b6574733a20496e76616c696420696e70757400000000000000000000000060648201526084016102b1565b60005b61079e600186610d65565b8110156108805785856107b2836001610d52565b8181106107c1576107c1610dca565b905060200201358686838181106107da576107da610dca565b905060200201351061086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f5363616c61626c654c696b657274456e666f7263656d656e743a3a736574427560448201527f636b6574733a204275636b657473206e6f742073657175656e7469616c00000060648201526084016102b1565b8061087881610df9565b915050610793565b508686600081811061089457610894610dca565b60200291909101358255506108ad600182018686610abf565b506108bc600282018484610abf565b503373ffffffffffffffffffffffffffffffffffffffff167f644aa63559522f8f6f8b506611f6d55d82a2ab57ed2d621aa3a46f4b41de5d7e88888888888860405161090d96959493929190610e7c565b60405180910390a250505050505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602090815260408083208484529091528120600101545b90505b92915050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001830160205260408120541515610953565b60006109538373ffffffffffffffffffffffffffffffffffffffff8416610a70565b6000610956825490565b6020820151516000908082036109d1576001915050610956565b8015610a485760208401516109e7600183610d65565b815181106109f7576109f7610dca565b6020026020010151831115610a36576040840151610a16600183610d65565b81518110610a2657610a26610dca565b6020026020010151915050610956565b80610a4081610ec5565b9150506109d1565b8360400151600081518110610a5f57610a5f610dca565b602002602001015191505092915050565b6000818152600183016020526040812054610ab757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610956565b506000610956565b828054828255906000526020600020908101928215610afa579160200282015b82811115610afa578235825591602001919060010190610adf565b50610b06929150610b0a565b5090565b5b80821115610b065760008155600101610b0b565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b4357600080fd5b919050565b600080600080600060a08688031215610b6057600080fd5b85359450602086013593506040860135925060608601359150610b8560808701610b1f565b90509295509295909350565b60008060408385031215610ba457600080fd5b50508035926020909101359150565b60008083601f840112610bc557600080fd5b50813567ffffffffffffffff811115610bdd57600080fd5b6020830191508360208260051b85010111156105b357600080fd5b60008060008060008060608789031215610c1157600080fd5b863567ffffffffffffffff80821115610c2957600080fd5b610c358a838b01610bb3565b90985096506020890135915080821115610c4e57600080fd5b610c5a8a838b01610bb3565b90965094506040890135915080821115610c7357600080fd5b50610c8089828a01610bb3565b979a9699509497509295939492505050565b600060208284031215610ca457600080fd5b5035919050565b60008060408385031215610cbe57600080fd5b610cc783610b1f565b946020939093013593505050565b600060208284031215610ce757600080fd5b61095382610b1f565b600080600060608486031215610d0557600080fd5b610d0e84610b1f565b95602085013595506040909401359392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561095657610956610d23565b8181038181111561095657610956610d23565b808202811582820484141761095657610956610d23565b600082610dc5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e2a57610e2a610d23565b5060010190565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610e6357600080fd5b8260051b80836020870137939093016020019392505050565b606081526000610e9060608301888a610e31565b8281036020840152610ea3818789610e31565b90508281036040840152610eb8818587610e31565b9998505050505050505050565b600081610ed457610ed4610d23565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea2646970667358221220e0a8cd6ae62c7ccabcdeae19667899e186eaed1e72091e95aa23140efca12e5c64736f6c63430008110033";

type ScalableLikertEnforcementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScalableLikertEnforcementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScalableLikertEnforcement__factory extends ContractFactory {
  constructor(...args: ScalableLikertEnforcementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ScalableLikertEnforcement> {
    return super.deploy(overrides || {}) as Promise<ScalableLikertEnforcement>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ScalableLikertEnforcement {
    return super.attach(address) as ScalableLikertEnforcement;
  }
  override connect(signer: Signer): ScalableLikertEnforcement__factory {
    return super.connect(signer) as ScalableLikertEnforcement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScalableLikertEnforcementInterface {
    return new utils.Interface(_abi) as ScalableLikertEnforcementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScalableLikertEnforcement {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ScalableLikertEnforcement;
  }
}
